{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome to the RomM Project, the premier self-hosted, open source ROM manager.</p> Website | Demo <p>RomM (ROM Manager) allows you to scan, enrich, and browse your game collection with a clean and responsive interface. With support for multiple platforms, various naming schemes, and custom tags, RomM is a must-have for anyone who plays on emulators.</p> <p>To get started with RomM, head over to the Quick Start guide in the main repository.</p>"},{"location":"#philosophy","title":"Philosophy","text":"<p>At the heart of this project is a commitment to freedom, collaboration, and transparency. We believe that software should be built for the benefit of its users, rather than solely to maximize profit or serve the interests of a few stakeholders, ensuring that it doesn't manipulate, exploit, or prioritize data collection.</p> <p>By offering RomM as a self-hosted, open-source solution, we ensure that everyone has the ability to manage their game collections on their own terms, and own their data, all without being tied to proprietary systems or services.</p> <p>Rom is and will always be free and open-source software.</p> <p>The core app is licensed under GNU AGPLv3, which requires that all modifications to the code be made available under the same license. This ensures that the community can benefit from and build upon the contributions of others, promoting trust and transparency.</p> <p>Other projects under the umbrella will be licensed under similar permissive licenses, such as GNU GPLv3 for software, or CC0 for documentation.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>RomM is a collaborative project, and we welcome contributions from the community. Our code is available on GitHub, and we encourage you to contribute to the project by submitting bug reports, feature requests, or pull requests. Please check the contribution guidelines in each project for more information.</p>"},{"location":"#community","title":"Community","text":"<p>We strive to create a safe and respectful space where everyone can contribute and benefit from the project by fostering a welcoming and inclusive environment for all users, regardless of their background or identity.</p> <p>Join us on Discord, where you can ask questions, submit ideas, get help, showcase your collection, and discuss RomM with other users.</p>"},{"location":"Getting-Started/Authentication/","title":"Authentication","text":"<p>RomM provides support for various forms of authentication, granting flexibility in securing access to its features.</p>"},{"location":"Getting-Started/Authentication/#setup","title":"Setup","text":"<p>You'll want to set the following environment variable before starting RomM:</p> <ul> <li><code>ROMM_AUTH_SECRET_KEY</code> is required and can be generated with <code>openssl rand -hex 32</code></li> </ul>"},{"location":"Getting-Started/Authentication/#sessions","title":"Sessions","text":"<p>When the <code>/login</code> endpoint is called with valid credentials, a <code>session_id</code> is generated, stored as a cookie and sent to the browser. The same token is used to create a cache entry in Redis (or in-memory if Redis is disabled) which maps the token to the user. This way no sensitive information is stored on the client.</p>"},{"location":"Getting-Started/Authentication/#roles","title":"Roles","text":"<p>A user can have one of the following roles:</p> <ul> <li>VIEWER: Can view platforms and ROMs, download ROMs, and edit own profile</li> <li>EDITOR: Can create/edit/delete platforms and ROMs</li> <li>ADMIN: Can view all users, and create/edit/disable/delete users</li> </ul> <p>As permissions are additive, editors will have all permissions of the <code>viewer</code> role, and admins all those of the <code>editor</code> role.</p>"},{"location":"Getting-Started/Authentication/#basic-authentication","title":"Basic Authentication","text":"<p>Requests can be made to protected API endpoints with an authorization header. The token is the base64 encoded value of <code>username:password</code>.</p> <p>Example using cURL:</p> <pre><code>curl https://romm.local/api/platforms -H 'Authorization: Basic YWRtaW46aHVudGVyMg=='\n</code></pre>"},{"location":"Getting-Started/Authentication/#oauth","title":"OAuth","text":"<p>Along with the above forms of authentication, we've added an endpoint to generate expiring, scope-limited authentication tokens (<code>/api/token</code>). Successfully authenticating with that endpoint with return an <code>access_token</code> valid for 15 minutes, and a <code>refresh_token</code> valid for 2 weeks. The <code>refresh_token</code> can be used to generate a new <code>access_token</code> when needed.</p> <p>The <code>/api/token</code> endpoint requires a username, password, and a list of scopes in the format <code>read:roms write:roms read:platforms ...</code>. The list of scopes and endpoints are available to browse via Swagger UI or ReDoc (see next section).</p> <p>Note: As of now, only the legacy password grant type is supported. We plan to eventually add support for Client Credentials.</p>"},{"location":"Getting-Started/Authentication/#openapi","title":"OpenAPI","text":"<p>The API endpoints are fully documented and compliant with the OpenAPI specification. Explore the API endpoints using the Swagger UI interface at <code>/api/docs</code> and the ReDoc interface at <code>/api/redoc</code>, or view the raw JSON at <code>/openapi.json</code>.</p> <p>For more information on OpenAPI, visit the OpenAPI Specification website.</p>"},{"location":"Getting-Started/Authentication/#faq","title":"FAQ","text":""},{"location":"Getting-Started/Authentication/#can-i-disable-authentication","title":"Can I disable authentication?","text":"<p>No, authentication is required and enabled by default.</p>"},{"location":"Getting-Started/Authentication/#i-want-to-allow-an-editor-to-edit-roms-but-not-delete-them-can-i-do-that","title":"I want to allow an EDITOR to edit ROMs but not delete them. Can I do that?","text":"<p>At this time, fine-grain control over permissions within a role is not supported. This decision was taking in order to simplify user management in the client, and authentication/permission code on the server.</p>"},{"location":"Getting-Started/Authentication/#is-authentication-saferobust-can-i-trust-it","title":"Is authentication safe/robust? Can I trust it?","text":"<p>We've done our best to build an authentication system that is simple, clear and comprehensible. We have automated tests which verify that access is granted when it should be, and blocked when not (invalid credentials, missing permissions, expired access tokens, etc.). That being said, we welcome any reviews of our authentication and permission flows, PRs to fix issues, and new tests to cover edge cases.</p>"},{"location":"Getting-Started/Authentication/#i-found-an-bugissue-with-authentication-how-do-i-report-it","title":"I found an bug/issue with authentication. How do I report it?","text":"<p>Please report bugs in our authentication/permission system privately by submitting a vulnerability report.</p>"},{"location":"Getting-Started/Configuration-File/","title":"Configuration File","text":"<p>Below is a breakdown of each section of the <code>config.yml</code> file and its purpose:</p>"},{"location":"Getting-Started/Configuration-File/#exclude","title":"<code>exclude</code>","text":"<p>This section lets you tell RomM which platforms, ROMs, or files to ignore during scanning.</p> <ul> <li> <p>platforms   Exclude entire platforms (folders) from being scanned.   Example:</p> <pre><code>platforms: [\"ps\", \"ngc\", \"gba\"]\n</code></pre> </li> <li> <p>roms   Fine-tune which ROMs or files are excluded.</p> <ul> <li> <p>single_file   Applies to ROMs that are single files (not in subfolders).</p> <ul> <li>extensions: Exclude files by extension.   Example:     <pre><code>extensions: [\"xml\", \"txt\"]\n</code></pre></li> <li>names: Exclude files by name or pattern (supports Unix wildcards).   Example:     <pre><code>names: [\"info.txt\", \"._*\", \"*.nfo\"]\n</code></pre></li> </ul> </li> <li> <p>multi_file   Applies to ROMs stored as folders (multi-disc, with DLC, etc.).</p> <ul> <li>names: Exclude entire folders by name.   Example:     <pre><code>names: [\"final fantasy VII\", \"DLC\"]\n</code></pre></li> <li>parts: Exclude specific files inside multi-file ROM folders.<ul> <li>names: Exclude files by name or pattern.   Example:     <pre><code>names: [\"data.xml\", \"._*\"]\n</code></pre></li> <li>extensions: Exclude files by extension.   Example:     <pre><code>extensions: [\"xml\", \"txt\"]\n</code></pre></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"Getting-Started/Configuration-File/#system","title":"<code>system</code>","text":"<p>Customize how RomM interprets your folder and platform names.</p> <ul> <li> <p>platforms   Map your custom folder names to RomM's recognized platform names.   Example:</p> <pre><code>platforms: { gc: \"ngc\", psx: \"ps\" }\n</code></pre> <p>This treats a <code>gc</code> folder as GameCube (<code>ngc</code>) and <code>psx</code> as PlayStation (<code>ps</code>).</p> </li> <li> <p>versions   Associate a platform with its main version. This also tells RomM to fetch medatata from the main version source.   Example:     </p><pre><code>versions: { naomi: \"arcade\" }\n</code></pre> </li> </ul>"},{"location":"Getting-Started/Configuration-File/#filesystem","title":"<code>filesystem</code>","text":"<p>Specify the folder name where your ROMs are located if it differs from the default. For example, if your <code>roms</code> folder it's named <code>my_roms</code> (<code>/home/user/library/my_roms</code>), set this accordingly.</p> <p>Example:</p> <pre><code>filesystem: { roms_folder: \"my_roms\" }\n</code></pre> <p>Tip</p> <p>You can find examples of full binded batocera or es-de config files.</p> <p>Warning</p> <p>Only uncomment or add the lines you need. Any omitted or empty sections will use RomM's defaults. For a full example, see the config.example.yml file.</p>"},{"location":"Getting-Started/Environment-Variables/","title":"Environment Variables","text":"<p>This is a complete list of available environment variables; required variables are marked with a <code>\u2713</code>.</p> <p>Tip</p> <p>You can also set environment variables with a <code>_FILE</code> suffix, which will load the contents of the file specified in the variable into the variable without the suffix. For example, setting <code>ROMM_AUTH_SECRET_KEY_FILE=/run/secrets/romm_auth_secret_key</code> and creating a file with the secret key at the specified path will set <code>ROMM_AUTH_SECRET_KEY</code> to the contents of the file. Learn more.</p>"},{"location":"Getting-Started/Environment-Variables/#application-settings","title":"Application settings","text":"Variable Description Required Default ROMM_AUTH_SECRET_KEY Generate a key with <code>openssl rand -hex 32</code> \u2713 DISABLE_CSRF_PROTECTION Disables CSRF protection (not recommended) <code>false</code> DISABLE_DOWNLOAD_ENDPOINT_AUTH Disable auth on download endpoint (WebRcade, Tinfoil) <code>false</code> DISABLE_USERPASS_LOGIN Disables login with username and password (when using OIDC) <code>false</code> SESSION_MAX_AGE_SECONDS Maximum age of a session (in seconds) <code>1209600</code> (14 days) KIOSK_MODE Read-only mode for public displays or kiosks <code>false</code> UPLOAD_TIMEOUT Timeout for file uploads (in seconds) <code>600</code> (10 minutes) SCAN_TIMEOUT Timeout for the background scan/rescan tasks (in seconds) <code>14400</code> (4 hours) TASK_TIMEOUT Timeout for the the rest of the background tasks (in seconds) <code>300</code> (5 minutes) DISABLE_EMULATOR_JS Disables playing in browser with EmulatorJS <code>false</code> DISABLE_RUFFLE_RS Disables playing flash games with RuffleRS <code>false</code> YOUTUBE_BASE_URL Base URL for alternate frontends (Piped, Invidious, etc.) <code>https://www.youtube.com</code> TZ Sets the timezone <code>UTC</code> ROMM_PORT Port on which the application listens <code>8080</code> ROMM_BASE_PATH Base folder path for library, resources and assets <code>/romm</code> ROMM_BASE_URL Base url for properly display container logs links (like register or recover password) <code>0.0.0.0</code> LOGLEVEL Logging level for the app <code>INFO</code> FORCE_COLOR Forces color output <code>false</code> NO_COLOR Disables color output <code>false</code> WEB_SERVER_CONCURRENCY Number of processes running the app <code>1</code> WEB_SERVER_KEEPALIVE Waiting time for requests on a Keep-Alive connection (in seconds) <code>2</code> WEB_SERVER_MAX_REQUESTS Maximum number of requests a worker will process before restarting <code>1000</code> WEB_SERVER_MAX_REQUESTS_JITTER Random jitter to add to the maximum number of requests a worker will process before restarting <code>100</code> WEB_SERVER_TIMEOUT Timeout for web server requests (in seconds) <code>300</code> WEB_SERVER_WORKER_CONNECTIONS Maximum number of simultaneous clients a single process can handle <code>1000</code>"},{"location":"Getting-Started/Environment-Variables/#dependencies","title":"Dependencies","text":"Variable Description Required Default DB_HOST Host name of database instance \u2713 <code>127.0.0.1</code> DB_PORT Port number of database instance <code>3306</code> DB_NAME Should match MYSQL_DATABASE in MariaDB <code>romm</code> DB_USER Database username (in MariaDB, should match MARIADB_USER) \u2713 DB_PASSWD Database password (in MariaDB, should match MARIADB_PASSWORD) \u2713 DB_QUERY_JSON Extra query parameters for the database connection, in JSON format (e.g. <code>{\"unix_socket\": \"/path/to/db\"}</code>) ROMM_DB_DRIVER Database driver to use (options: <code>mariadb</code>, <code>mysql</code>, <code>postgresql</code>) <code>mariadb</code> REDIS_HOST Host name of Redis/Valkey instance <code>127.0.0.1</code> REDIS_PORT Port number of Redis/Valkey instance <code>6379</code> REDIS_USERNAME Username for Redis/Valkey instance REDIS_PASSWORD Password for Redis/Valkey instance REDIS_DB Database number for Redis/Valkey instance <code>0</code> REDIS_SSL Enable SSL for Redis instance <code>false</code> SENTRY_DSN DSN for Sentry error tracking"},{"location":"Getting-Started/Environment-Variables/#metadata-providers","title":"Metadata providers","text":"Variable Description Required Default IGDB_CLIENT_ID Client ID for IGDB API IGDB_CLIENT_SECRET Client secret for IGDB API SCREENSCRAPER_USER Screenscraper username SCREENSCRAPER_PASSWORD Screenscraper password MOBYGAMES_API_KEY MobyGames secret API key STEAMGRIDDB_API_KEY SteamGridDB secret API key RETROACHIEVEMENTS_API_KEY Retroachievements secret API key REFRESH_RETROACHIEVEMENTS_CACHE_DAYS Retroachievements metadata cache refresh (in days) <code>30</code> LAUNCHBOX_API_ENABLED Enable LaunchBox API integration <code>false</code> PLAYMATCH_API_ENABLED Enable PlayMatch API integration <code>false</code> HASHEOUS_API_ENABLED Enable Hasheous API integration <code>false</code> FLASHPOINT_API_ENABLED Enable Flashpoint API integration <code>false</code> HLTB_API_ENABLED Enable HowLongToBeat API integration <code>false</code>"},{"location":"Getting-Started/Environment-Variables/#authentication","title":"Authentication","text":"Variable Description Required Default OIDC_ENABLED Enable OpenID Connect (OIDC) authentication <code>false</code> OIDC_PROVIDER Name of the OIDC provider in use OIDC_CLIENT_ID Client ID for OIDC authentication OIDC_CLIENT_SECRET Client secret for OIDC authentication OIDC_REDIRECT_URI Absolute redirect URI for OIDC authentication OIDC_SERVER_APPLICATION_URL Absolute URL of the OIDC server application OIDC_TLS_CACERTFILE Path to a file containing trusted CA certificates"},{"location":"Getting-Started/Environment-Variables/#background-tasks","title":"Background tasks","text":"Variable Description Required Default ENABLE_RESCAN_ON_FILESYSTEM_CHANGE Enable re-scanning of library when filesystem changes <code>false</code> RESCAN_ON_FILESYSTEM_CHANGE_DELAY Delay before re-scanning library when filesystem changes (in minutes) <code>5</code> ENABLE_SCHEDULED_RESCAN Enable scheduled re-scanning of library <code>false</code> SCHEDULED_RESCAN_CRON Cron expression for scheduled re-scanning <code>\"0 3 * * *\"</code> ENABLE_SCHEDULED_UPDATE_SWITCH_TITLEDB Enable scheduled updating of Switch TitleDB index <code>false</code> SCHEDULED_UPDATE_SWITCH_TITLEDB_CRON Cron expression for scheduled updating of Switch TitleDB <code>\"0 4 * * *\"</code> ENABLE_SCHEDULED_UPDATE_LAUNCHBOX_METADATA Enable scheduled updating of LaunchBox metadata <code>false</code> SCHEDULED_UPDATE_LAUNCHBOX_METADATA_CRON Cron expression for scheduled updating of LaunchBox metadata <code>\"0 4 * * *\"</code> ENABLE_SCHEDULED_CONVERT_IMAGES_TO_WEBP Enable scheduled conversion of images to WebP format <code>false</code> SCHEDULED_CONVERT_IMAGES_TO_WEBP_CRON Cron expression for scheduled conversion of images to WebP format <code>\"0 4 * * *\"</code> ENABLE_SCHEDULED_RETROACHIEVEMENTS_PROGRESS_SYNC Enable scheduled syncing of Retroachievements progress <code>false</code> SCHEDULED_RETROACHIEVEMENTS_PROGRESS_SYNC_CRON Cron expression for scheduled syncing of Retroachievements progress <code>\"0 4 * * *\"</code>"},{"location":"Getting-Started/Environment-Variables/#development","title":"Development","text":"Variable Description Required Default DEV_MODE Enable development mode (debugging, hot-reloading) <code>false</code> DEV_HOST Host for development server <code>127.0.0.1</code> DEV_PORT Port for development server <code>5000</code> DEV_SQL_ECHO Enable SQL query logging in development mode <code>false</code>"},{"location":"Getting-Started/Folder-Structure/","title":"Folder Structure","text":"<p>RomM requires one of these folder structures for proper operation. It will first attempt to detect Structure A (recommended), and if not found, will fall back to Structure B. This auto-detection ensures flexibility while encouraging organization best practices.</p>"},{"location":"Getting-Started/Folder-Structure/#folder-organization","title":"Folder Organization","text":"<p>RomM organizes content in two main categories: ROMs and BIOS files.</p> <ul> <li> <p>Structure A (Recommended): Both ROMs and BIOS files have their own dedicated root folders, with platform folders inside each.</p> <ul> <li><code>/roms/{platform}/</code> - Contains all game files for that platform</li> <li><code>/bios/{platform}/</code> - Contains all BIOS files for that platform</li> </ul> </li> <li> <p>Structure B (Fallback): Each platform has its own root folder containing both a ROMs folder and a BIOS folder.</p> <ul> <li><code>/{platform}/roms/</code> - Contains all game files for that platform</li> <li><code>/{platform}/bios/</code> - Contains all BIOS files for that platform</li> </ul> </li> </ul> <p>Note</p> <p>The BIOS folder is entirely optional and only needed for platforms that require BIOS files.</p> <p>When using Docker, the volume mount point differs based on your chosen structure:</p> <ul> <li>Structure A: Mount the parent folder of the <code>roms</code> folder</li> <li>Structure B: Mount the parent folder of the <code>platform</code> folders</li> </ul> <p>For multifile games (games stored as folders with multiple files or folders inside), RomM will detect special folders inside the game and will display with special tags in the webUI:</p> <ul> <li><code>dlc</code></li> <li><code>hack</code></li> <li><code>manual</code></li> <li><code>mod</code></li> <li><code>patch</code></li> <li><code>update</code></li> <li><code>demo</code></li> <li><code>translation</code></li> <li><code>prototype</code></li> </ul> <p>Tip</p> <p>For folder naming conventions, review the Platform Support section. To override default system names in the folder structure (if your directories are named differently), see the Configuration File section.</p> Structure A (recommended) Structure B (fallback) <code>library/roms/{platform}/{game}</code> <code>library/{platform}/roms/{game}</code> <pre>\n        library/\n        \u251c\u2500 roms/\n        \u2502  \u251c\u2500 gbc/\n        \u2502  \u2502  \u251c\u2500 game_1.gbc\n        \u2502  \u2502  \u2514\u2500 game_2.gbc\n        \u2502  \u2502\n        \u2502  \u251c\u2500 gba/\n        \u2502  \u2502  \u251c\u2500 game_3.gba\n        \u2502  \u2502  \u2514\u2500 game_4/\n        \u2502  \u2502     \u251c\u2500 game_4.gba\n        \u2502  \u2502     \u251c\u2500 dlc\n        \u2502  \u2502     \u2502  \u251c\u2500 game_4_dlc_1.7z\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_dlc_2.7z\n        \u2502  \u2502     \u251c\u2500 hack\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_hardmode.rar\n        \u2502  \u2502     \u251c\u2500 manual\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_manual.pdf\n        \u2502  \u2502     \u251c\u2500 mod\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_crazy_mode.zip\n        \u2502  \u2502     \u251c\u2500 patch\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_patch_v1.1.zip\n        \u2502  \u2502     \u251c\u2500 update\n        \u2502  \u2502     \u251c\u2500 demo\n        \u2502  \u2502     \u251c\u2500 translation\n        \u2502  \u2502     \u2514\u2500 prototype\n        \u2502  \u2502\n        \u2502  \u2514\u2500 ps/\n        \u2502     \u251c\u2500 game_5/\n        \u2502     \u2502   \u251c\u2500 game_5_cd_1.iso\n        \u2502     \u2502   \u2514\u2500 game_5_cd_2.iso\n        \u2502     \u2502\n        \u2502     \u2514\u2500 game_6.iso\n        \u2502\n        \u2514\u2500 bios/\n           \u251c\u2500 gba/\n           \u2502  \u2514\u2500 gba_bios.bin\n           \u2502\n           \u2514\u2500 ps/\n              \u251c\u2500 scph1001.bin\n              \u251c\u2500 scph5501.bin\n              \u2514\u2500 scph5502.bin\n      </pre> <pre>\n        library/\n        \u251c\u2500 gbc/\n        \u2502  \u2514\u2500 roms/\n        \u2502     \u251c\u2500 game_1.gbc\n        \u2502     \u2514\u2500 game_2.gbc\n        \u2502\n        \u251c\u2500 gba/\n        \u2502  \u251c\u2500 roms/\n        \u2502  \u2502  \u251c\u2500 game_3.gba\n        \u2502  \u2502  \u2514\u2500 game_4/\n        \u2502  \u2502     \u251c\u2500 game_4.gba\n        \u2502  \u2502     \u251c\u2500 dlc\n        \u2502  \u2502     \u2502  \u251c\u2500 game_4_dlc_1.7z\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_dlc_2.7z\n        \u2502  \u2502     \u251c\u2500 hacks\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_hardmode.rar\n        \u2502  \u2502     \u251c\u2500 manuals\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_manual.pdf\n        \u2502  \u2502     \u251c\u2500 mods\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_crazy_mode.zip\n        \u2502  \u2502     \u251c\u2500 patch\n        \u2502  \u2502     \u2502  \u2514\u2500 game_4_patch_v1.1.zip\n        \u2502  \u2502     \u251c\u2500 update\n        \u2502  \u2502     \u251c\u2500 demo\n        \u2502  \u2502     \u251c\u2500 translation\n        \u2502  \u2502     \u2514\u2500 prototype\n        \u2502  \u2502\n        \u2502  \u2514\u2500 bios/\n        \u2502     \u2514\u2500 gba_bios.bin\n        \u2502\n        \u2514\u2500 ps/\n           \u251c\u2500 roms/\n           \u2502  \u251c\u2500 game_5/\n           \u2502  \u2502  \u251c\u2500 game_5_cd1.iso\n           \u2502  \u2502  \u2514\u2500 game_5_cd2.iso\n           \u2502  \u2502\n           \u2502  \u2514\u2500 game_6.iso\n           \u2502\n           \u2514\u2500 bios/\n              \u251c\u2500 scph1001.bin\n              \u251c\u2500 scph5501.bin\n              \u2514\u2500 scph5502.bin\n      </pre> <p>Note</p> <p>RomM can be setup without a prior folder structure. If files are manually uploaded from the webUI, RomM will automatically create the folder Structure A</p>"},{"location":"Getting-Started/Folder-Structure/#configuration-file","title":"Configuration file","text":"<p>RomM's behavior can be customized using a <code>config.yml</code> file or through the <code>Library Management</code> page in the <code>Settings</code> menu. You can grab the example config.example.yml file and adapt it to your library.</p> <p>What is shown in the <code>Library Management</code> page is the content of the <code>config.yml</code>. For more details read the configuration file section.</p>"},{"location":"Getting-Started/Folder-Structure/#naming-convention","title":"Naming Convention","text":""},{"location":"Getting-Started/Folder-Structure/#tag-support","title":"Tag Support","text":"<p>Games can be tagged with region, revision, or other tags by using parentheses in the file name. Additionally, you can set the region and language by adding a prefix: <code>(USA)</code>, <code>[reg-J]</code>, <code>(French)</code>, <code>[De]</code>.</p> <ul> <li>Revision tags must be prefixed with <code>rev</code> or <code>rev-</code> (e.g. <code>rev v1</code> or <code>rev-1</code>)</li> <li>Other tags will also be imported, for example: <code>tetris [1.0001](HACK)[!].gba</code></li> </ul> <p>Tags can be used to search for games in the search bar. For example, searching for <code>(USA)</code> will return all games with the USA tag.</p>"},{"location":"Getting-Started/Metadata-Providers/","title":"Metadata Providers","text":"<p>RomM supports multiple metadata providers to enrich your game library with titles, descriptions, cover art, and achievements. You don't need all providers, so this guide covers popular combos and setup instructions.</p>"},{"location":"Getting-Started/Metadata-Providers/#popular-combos","title":"Popular combos","text":"<p>Here are some combinations you can use based on your needs:</p>"},{"location":"Getting-Started/Metadata-Providers/#the-chefs-choice-hasheous-igdb-steamgriddb-retroachievements","title":"\u2b50 The Chef's Choice: Hasheous + IGDB + SteamGridDB + Retroachievements","text":"<ul> <li>Supports 135+. popular systems</li> <li>Hasheous provides hash-based matching and proxies IGDB data (titles, descriptions and artwork)</li> <li>IGDB adds additional metadata like related games and screenshots</li> <li>SteamGridDB provides high-quality alternative cover art</li> <li>Retroachievements provides achievement progress</li> <li>This is the recommended setup for most users</li> </ul>"},{"location":"Getting-Started/Metadata-Providers/#the-twitch-fanboy-igdb-playmatch","title":"The Twitch Fanboy: IGDB + PlayMatch","text":"<ul> <li>Supports the 200+ systems available on IGDB</li> <li>Provides titles, descriptions, cover art and related games from IGDB</li> <li>PlayMatch adds hash-based matching for unmatched files</li> <li>Use this if you want a single-provider solution</li> </ul>"},{"location":"Getting-Started/Metadata-Providers/#the-french-connection-screenscraper-steamgriddb-retroachievements","title":"The French Connection: ScreenScraper + SteamGridDB + Retroachievements","text":"<ul> <li>Supports 125+ popular systems</li> <li>ScreenScraper provides titles, descriptions, cover art, screenshots and manuals</li> <li>SteamGridDB provides high-quality alternative cover art</li> <li>Retroachievements provides achievement progress</li> <li>Use this if you want to avoid Twitch/Amazon products</li> </ul>"},{"location":"Getting-Started/Metadata-Providers/#the-quick-starter-hasheous","title":"The Quick Starter: Hasheous","text":"<ul> <li>Hash-based matching only \u26a0\ufe0f</li> <li>Proxies titles, descriptions and cover art from IGDB</li> <li>Incredibly fast scan times</li> <li>For users who want to avoid API keys</li> </ul>"},{"location":"Getting-Started/Metadata-Providers/#the-launchboxer-launchbox","title":"The LaunchBoxer: LaunchBox","text":"<ul> <li>Exact filename matching only \u26a0\ufe0f</li> <li>Makes no API calls to cloud services</li> <li>LaunchBox provides titles, descriptions, and cover art</li> <li>Ideal for LaunchBox users with correct filenames</li> </ul>"},{"location":"Getting-Started/Metadata-Providers/#setup-instructions","title":"Setup instructions","text":""},{"location":"Getting-Started/Metadata-Providers/#igdb","title":"IGDB","text":"<p>IGDB (Internet Game Database) is a popular metadata provider that offers metadata, cover art, screenshots, related games and more.</p> <p>To access the IGDB API you'll need a Twitch account and a valid phone number for 2FA verification. Up-to-date instructions are available in the IGDB API documentation. When registering your application in the Twitch Developer Portal, fill out the form like so:</p> <ul> <li>Name: Something unique or random like <code>romm-3fca6fd7f94dea4a05d029f654c0c44b</code> or <code>KVV8NDXMSRFJ2MRNPNRSL7GQT</code></li> <li>OAuth Redirect URLs: <code>localhost</code></li> <li>Category: <code>Application Integration</code></li> <li>Client Type: <code>Confidential</code></li> </ul> <p>Important</p> <p>The name you pick has to be unique! Picking an existing name will fail silently, with no error messages. We recommend using <code>romm-&lt;random hash&gt;</code>, like <code>romm-3fca6fd7f94dea4a05d029f654c0c44b</code></p> <p>Note the client ID and secret that appear on screen, and use them to set <code>IGDB_CLIENT_ID</code> and <code>IGDB_CLIENT_SECRET</code> in your environment variables.</p> Screenshots <p> </p>"},{"location":"Getting-Started/Metadata-Providers/#screenscraper","title":"ScreenScraper","text":"<p>ScreenScraper.fr is a French provider that offers metadata, cover art, screenshots and manuals. It supports a wide range of systems and is a great alternative to IGDB.</p> <p>To access the ScreenScraper API, create a ScreenScraper account and copy the user and password you just created to <code>SCREENSCRAPER_USER</code> and <code>SCREENSCRAPER_PASSWORD</code> respectively.</p>"},{"location":"Getting-Started/Metadata-Providers/#mobygames","title":"MobyGames","text":"<p>MobyGames is a metadata provider that offers medatada, cover art and screenshots.</p> <p>To access the MobyGames API, create a MobyGames account and then visit your profile page. Click the API link under your user name to sign up for an API key. Copy the key shown and use it to set <code>MOBYGAMES_API_KEY</code>.</p> <p>Important</p> <p>Access to the MobyGames API is now a paid feature. While we will continue to support it, we recommend using ScreenScraper or Hasheous instead, as they are free to use.</p>"},{"location":"Getting-Started/Metadata-Providers/#launchbox","title":"LaunchBox","text":"<p>The LaunchBox Games Database is a community-driven database that provides metadata, cover art, and screenshots. Like the Launchbox desktop application, RomM downloads the entire database locally and matches games based on their exact filenames.</p> <p>To enable LaunchBox, set <code>LAUNCHBOX_API_ENABLED=true</code> in your environment variables. You can enable regular updates of the database by setting <code>ENABLE_SCHEDULED_UPDATE_LAUNCHBOX_METADATA</code>, and set the frequency on the cron job with <code>SCHEDULED_UPDATE_LAUNCHBOX_METADATA_CRON</code> (defaults to 5:00 AM every day).</p>"},{"location":"Getting-Started/Metadata-Providers/#hasheous","title":"Hasheous","text":"<p>Hasheous is a free, open-source metadata provider that uses file hashes to match games. It proxies IGDB data for titles, descriptions, and cover art, and can provide Retroachievements IDs for matched games.</p> <p>Simply set <code>HASHEOUS_API_ENABLED=true</code> in your environment variables, and future scans will start using the Hasheous API.</p>"},{"location":"Getting-Started/Metadata-Providers/#playmatch","title":"PlayMatch","text":"<p>Playmatch is a project built and hosted by a member of our comminuty. It provides a hash-based matching service for, and is used in conjunction with, IGDB.</p> <p>To enable PlayMatch, set <code>PLAYMATCH_API_ENABLED=true</code> in your environment variables.</p>"},{"location":"Getting-Started/Metadata-Providers/#steamgriddb","title":"SteamGridDB","text":"<p>SteamGridDB provides custom cover art for games or collections. It's not accessed through the scanner but from the \"search cover\" button when manually editing a game.</p> <p>To access steamGridDB API, you need to login into their website with a steam account. Once logged in, go to your API tab under the preferences page. Copy the key shown and use it to set <code>STEAMGRIDDB_API_KEY</code>.</p>"},{"location":"Getting-Started/Metadata-Providers/#retroachievements","title":"Retroachievements","text":"<p>RomM is able to display your achievements from Retroachievements. To sync it with your RomM instance, you need to generate an API key from your Retroechievements account in your settings</p> <p>Copy the key shown and use it to set <code>RETROACHIEVEMENTS_API_KEY</code> and perform a partial scan targeting the platform you want to match with Retroachievements.</p> <p>After that, each user need to set their own username in their profile and sync it with Retroachievements. A new <code>Achievements</code> tab will appear in the <code>Personal</code> tab in the game details.</p> <p>To avoid unneccessary API calls, a cached file with the RA database is stored in RomM. Refresh time for that cache file can be changed with the env variable <code>REFRESH_RETROACHIEVEMENTS_CACHE_DAYS</code></p> Screenshots <p> </p>"},{"location":"Getting-Started/Quick-Start-Guide/","title":"Quick Start Guide","text":"<p>This quick start guide will help you get a RomM instance up and running. It is split into 3 parts:</p> <ul> <li>Prepare</li> <li>Build</li> <li>Configure</li> </ul>"},{"location":"Getting-Started/Quick-Start-Guide/#prepare","title":"Prepare","text":"<p>This guide will assume that you already have the following done, if not - stop here and come back when you do.</p> <ul> <li>Docker installed and running on your system</li> <li>Your ROMs organized in the correct folder structure</li> <li>The recommended metadata providers set up</li> <li>A copy of the config.yml in the config folder</li> </ul> <p>Warning</p> <p>RomM works without a metadata API for basic use, but may cause issues with plugins like Playnite. Setting up IGDB API keys is recommended to prevent setup problems.</p>"},{"location":"Getting-Started/Quick-Start-Guide/#build","title":"Build","text":"<p>Now that we have everything gathered, we can begin getting your instance set up!</p> <ol> <li>Download a copy of the latest docker-compose.example.yml file from GitHub</li> <li>Edit the file and modify the following values to configure the database<ul> <li><code>MARIADB_ROOT_PASSWORD</code>: Sets the root password of the database. Use a unique and secure password (use a password generator for simplicity)</li> <li><code>MARIADB_DATABASE</code>: Sets the database name for RomM. This can be modified - but it's not necessary</li> <li><code>MARIADB_USER</code>: User to connect to the database with. This can be modified - but it's not necessary</li> <li><code>MARIADB_PASSWORD</code>: Password for the user to connect to the database with. Use a unique and secure password (use a password generator for simplicity)</li> </ul> </li> <li>Modify the following values in the environment to configure the application. -- Other values can be changed, but should not be done unless you know what you are doing, and are outside the scope of this guide<ul> <li><code>DB_NAME</code>: Name of the database set in the database section</li> <li><code>DB_USER</code>: Name of the user to connect to the database</li> <li><code>DB_PASSWD</code>: Password of the user to connect to the database</li> </ul> </li> <li>Run the following command in a terminal and save the output to the <code>ROMM_AUTH_SECRET_KEY</code> environment variable:     <pre><code>openssl rand -hex 32\n</code></pre>     It should look something like this:     <pre><code>03a054b6ca27e0107c5eed552ea66becd9f3a2a8a91e7595cd462a593f9ecd09\n</code></pre></li> <li>Add your metadata sources API keys:<ul> <li>IGDB: <code>IGDB_CLIENT_ID</code> and <code>IGDB_CLIENT_SECRET</code></li> <li>ScreenScraper.fr: <code>SCREENSCRAPER_USER</code> and <code>SCREENSCRAPER_PASSWORD</code></li> <li>RetroAchievements: <code>RETROACHIEVEMENTS_USERNAME</code> and <code>RETROACHIEVEMENTS_API_KEY</code></li> <li>MobyGames: <code>MOBYGAMES_API_KEY</code></li> <li>SteamGridDB: <code>STEAMGRIDDB_API_KEY</code></li> <li>PlayMatch: <code>PLAYMATCH_API_ENABLED=true</code></li> <li>Hasheous: <code>HASHEOUS_API_ENABLED=true</code></li> <li>LaunchBox: <code>LAUNCHBOX_API_ENABLED=true</code></li> </ul> </li> <li>Modify the following values in the volumes to configure the application<ul> <li><code>/path/to/library</code>: Path to the directory where your rom files will be stored (usually the parent folder of the <code>roms</code> folder)</li> <li><code>/path/to/assets</code>: Path to the directory where you will store your saves, etc</li> <li><code>/path/to/config</code>: Path to the directory where you will store the config.yml (store the <code>config.yml</code> file in this folder)</li> </ul> </li> <li> <p>Save the file as docker-compose.yml instead of docker-compose.example.yml. It should look something like this:</p> Example Docker Compose <pre><code>version: \"3\"\n\nvolumes:\n    mysql_data:\n    romm_resources:\n    romm_redis_data:\n\nservices:\n    romm:\n        image: rommapp/romm:latest\n        container_name: romm\n        restart: unless-stopped\n        environment:\n            - DB_HOST=romm-db\n            - DB_NAME=romm # Should match MARIADB_DATABASE in mariadb\n            - DB_USER=romm-user # Should match MARIADB_USER in mariadb\n            - DB_PASSWD= # Should match MARIADB_PASSWORD in mariadb\n            - ROMM_AUTH_SECRET_KEY= # Generate a key with `openssl rand -hex 32`\n            - SCREENSCRAPER_USER= # These are the recommended metadata providers\n            - SCREENSCRAPER_PASSWORD= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#screenscraper\n            - RETROACHIEVEMENTS_API_KEY= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#retroachievements\n            - STEAMGRIDDB_API_KEY= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#steamgriddb\n            - HASHEOUS_API_ENABLED=true # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#hasheous\n        volumes:\n            - romm_resources:/romm/resources # Resources fetched from IGDB (covers, screenshots, etc.)\n            - romm_redis_data:/redis-data # Cached data for background tasks\n            - /path/to/library:/romm/library # Your game library. Check https://github.com/rommapp/romm?tab=readme-ov-file#folder-structure for more details.\n            - /path/to/assets:/romm/assets # Uploaded saves, states, etc.\n            - /path/to/config:/romm/config # Path where config.yml is stored\n        ports:\n            - 80:8080\n        depends_on:\n            romm-db:\n                condition: service_healthy\n                restart: true\n\n    romm-db:\n        image: mariadb:latest\n        container_name: romm-db\n        restart: unless-stopped\n        environment:\n            - MARIADB_ROOT_PASSWORD= # Use a unique, secure password\n            - MARIADB_DATABASE=romm\n            - MARIADB_USER=romm-user\n            - MARIADB_PASSWORD=\n        volumes:\n            - mysql_data:/var/lib/mysql\n        healthcheck:\n            test: [CMD, healthcheck.sh, --connect, --innodb_initialized]\n            start_period: 30s\n            start_interval: 10s\n            interval: 10s\n            timeout: 5s\n            retries: 5\n</code></pre> </li> <li> <p>Open the terminal and navigate to the directory containing the docker-compose file</p> </li> <li> <p>Run <code>docker compose up -d</code> to kick off the docker pull. You will see it pull the container and set up the volumes and network:</p> <pre><code>    {\n        \"file\": \"../latest/resources/asciinema/quick-start-docker-compose.cast\",\n        \"title\": \"RomM docker compose install\",\n        \"preload\": true,\n        \"loop\": true,\n        \"auto_play\": true,\n        \"cols\": 140,\n        \"rows\": 30,\n        \"fit\": \"width\",\n        \"terminal_font_size\": \"small\",\n        \"terminal_line_height\": \"1.2\",\n        \"terminal_font_family\": \"Roboto Mono, Monaco, Consolas, monospace\"\n    }\n</code></pre> </li> <li> <p>Run <code>docker ps -f name=romm</code> to verify that the containers are running</p> </li> <li>Open a web browser and navigate to <code>http://localhost:80</code>, where you should be greeted with the RomM setup page</li> <li>Go through the setup wizard, setting your admin username and password</li> <li>Log in with the credentials you set in the last step</li> </ol>"},{"location":"Getting-Started/Quick-Start-Guide/#configure","title":"Configure","text":""},{"location":"Getting-Started/Quick-Start-Guide/#importing-your-roms-via-scanner","title":"Importing your ROMs via scanner","text":"<p>This method is generally the fastest and recommended for first time setup. You need your library properly mounted as a container volume:</p> <ol> <li>Log into RomM with your user credentials</li> <li>Click the <code>Scan</code> button in the sidebar</li> <li>Select the metadata providers you want to fetch metadata from</li> <li>The system will now begin scanning the rom files and applying metadata to them. You can click on any of the items that it has tagged to see the metadata it pulled without having to stop the scan</li> <li>After the scan completes, click the RomM logo to go back to the main screen. You should see the platforms and recent games it has scanned. You are now ready to rock and RomM!</li> </ol>"},{"location":"Getting-Started/Quick-Start-Guide/#uploading-your-roms-via-web-interface","title":"Uploading your ROMs via Web Interface","text":"<p>This method is certainly viable, but not recommended if you have a lot of ROMs and/or multiple platforms. It is good for adding after the fact as your collection grows, but wouldn't be recommended for the first set up, nor for multi-file ROMs:</p> <ol> <li>Log into RomM with your user credentials</li> <li>Click the <code>Upload</code> button in the sidebar</li> <li>Select the platform, then click <code>+ ADD</code> and select the ROMs you want to upload in the file selector that appears</li> <li>Click <code>Upload</code> to begin uploading the ROMs</li> <li>Repeat for all the <code>roms/platforms</code> you have</li> </ol> <p></p>"},{"location":"Getting-Started/Reverse-Proxy/","title":"Reverse Proxy","text":"<p>Here are some basic configurations for popular reverse proxies. Some installations may require modifications to configuration options not listed below.</p>"},{"location":"Getting-Started/Reverse-Proxy/#caddy","title":"Caddy","text":"<pre><code>http://romm.mysite.com {\n  reverse_proxy romm:8080\n}\n</code></pre>"},{"location":"Getting-Started/Reverse-Proxy/#caddy-tls-https","title":"Caddy + TLS (HTTPS)","text":"<pre><code>https://romm.mysite.com {\n  tls mysite.com.crt mysite.com.key  # Certificate and key files\n\n  encode zstd gzip\n\n  header * {\n    Strict-Transport-Security \"max-age=31536000;\"\n    X-XSS-Protection \"1; mode=block\"\n    X-Frame-Options \"SAMEORIGIN\"\n    X-Robots-Tag \"noindex, nofollow\"\n    -Server\n    -X-Powered-By\n  }\n\n  reverse_proxy romm:8080\n}\n</code></pre>"},{"location":"Getting-Started/Reverse-Proxy/#nginx","title":"Nginx","text":"<pre><code>server {\n  listen 80 default_server;\n  server_name romm.mysite.com;\n  client_max_body_size 0;\n\n  location / {\n    include /config/nginx/proxy.conf;\n    include /config/nginx/resolver.conf;\n    set $upstream_app romm;\n    set $upstream_port 8080;\n    set $upstream_proto http;\n    proxy_pass $upstream_proto://$upstream_app:$upstream_port;\n  }\n}\n</code></pre>"},{"location":"Getting-Started/Reverse-Proxy/#nginx-tls-https","title":"Nginx + TLS (HTTPS)","text":"<pre><code>server {\n  listen 80 default_server;\n  server_name _;\n  return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n\n    server_name romm.mysite.com;\n    include /config/nginx/ssl.conf;\n    client_max_body_size 0;\n\n    location / {\n      include /config/nginx/proxy.conf;\n      include /config/nginx/resolver.conf;\n      set $upstream_app romm;\n      set $upstream_port 8080;\n      set $upstream_proto http;\n      proxy_pass $upstream_proto://$upstream_app:$upstream_port;\n\n      # Hide version\n      server_tokens off;\n\n      # Security headers\n      add_header X-Frame-Options \"SAMEORIGIN\" always;\n      add_header X-Content-Type-Options \"nosniff\" always;\n      add_header X-XSS-Protection \"1; mode=block\" always;\n      add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\n      add_header Referrer-Policy \"no-referrer-when-downgrade\" always;\n    }\n}\n</code></pre>"},{"location":"Getting-Started/Reverse-Proxy/#nginx-proxy-manager","title":"Nginx Proxy Manager","text":"<p>Items marked with \u2757 are important to set, as RomM may not correctly otherwise!</p>"},{"location":"Getting-Started/Reverse-Proxy/#details","title":"\u26a1 Details","text":"<ul> <li>Domain Names: <code>romm.example.com</code> (replace example with your own)* Scheme: <code>http</code></li> <li>Forward Hostname/IP: device IP (like 192.168.X.X)</li> <li>Forward Port: <code>8080</code></li> <li>Cache Assets: <code>off</code></li> <li>Block Common Exploits: <code>on</code></li> <li>Websockets Support: <code>on</code> \u2757</li> <li>Access List: -</li> </ul>"},{"location":"Getting-Started/Reverse-Proxy/#ssl","title":"\ud83d\udee1\ufe0f SSL","text":"<p>Strongly recommended, but only required if you plan to secure your site (use HTTPS)</p> <ul> <li>SSL Certificate: \"Request a new SSL Certificate\"</li> <li>Force SSL: <code>on</code></li> <li>HTTP/2 Support: <code>on</code></li> <li>HSTS Enabled: <code>off</code></li> <li>Email Address for Let's Encrypt: your email address</li> <li>I Agree to the TOS: <code>on</code></li> </ul>"},{"location":"Getting-Started/Reverse-Proxy/#advanced","title":"\u2699\ufe0f Advanced","text":"<p>Custom Nginx Configuration \u2757</p> <pre><code>proxy_max_temp_file_size 0;\n</code></pre> Details SSL Advanced"},{"location":"Getting-Started/Reverse-Proxy/#traefik","title":"Traefik","text":""},{"location":"Getting-Started/Reverse-Proxy/#using-a-configuration-document","title":"Using a configuration document","text":"<pre><code>http:\n    romsdomainse:\n        entryPoints:\n            - \"https\"\n        rule: \"Host(`roms.domain.se`)\"\n        middlewares:\n            - default-headers\n            - https-redirectscheme\n        tls:\n            certResolver: http\n        service: romsdomainse\n\nservices:\n    romsdomainse:\n        loadBalancer:\n            servers:\n                - url: \"http://192.168.1.100:8080\"\n            passHostHeader: true\n</code></pre>"},{"location":"Getting-Started/Reverse-Proxy/#using-labels-in-docker-compose","title":"Using labels in docker compose","text":"<pre><code>labels:\n    - \"traefik.enable=true\"\n    - \"traefik.http.services.romm.loadbalancer.server.port=8080\"\n    - \"traefik.http.routers.romm.rule=Host(`romm.YOUR_DOMAIN.com`)\"\n    - \"traefik.http.routers.romm.entrypoints=websecure\"\n    - \"traefik.http.routers.romm.tls=true\"\n    - \"traefik.http.routers.romm.tls.certresolver=https\"\n</code></pre>"},{"location":"Integrations/Playnite-plugin/","title":"Playnite plugin","text":"<p>Playnite is an open source video game library manager with one simple goal: To provide a unified interface for all of your games.</p> <p>This plugin allows you to import your RomM library into Playnite. It queries the RomM API to create Playnite library entires for each of your games. Installing a game in Playnite will download it from RomM and store it on your system, allowing you to launch it in your emulator of choice.</p>"},{"location":"Integrations/Playnite-plugin/#installation","title":"Installation","text":"<ul> <li>Option A: Open this link in your browser to launch Playnite and install the plugin automatically: <code>playnite://playnite/installaddon/RomM_9700aa21-447d-41b4-a989-acd38f407d9f</code></li> <li>Option B: Download the plugin from the Playnite add-ons website</li> <li>Option C: In Playnite, go to <code>Menu</code> -&gt; <code>Add-ons...</code> -&gt; <code>Browse</code> -&gt; <code>Libraries</code>, search for <code>RomM</code>, and click <code>Install</code></li> <li>Option D: Download the latest release from the releases page and install it manually by dragging the <code>.pext</code> file onto Playnite</li> </ul>"},{"location":"Integrations/Playnite-plugin/#setup","title":"Setup","text":""},{"location":"Integrations/Playnite-plugin/#emulators","title":"Emulators","text":"<p>The plugin requires that you have at least 1 emulator installed on your system and configured in Playnite. You can use a built-in emulator or a custom one. If no emulators are installed and configured, you won't be able to complete setup! To set up an emulator, go to <code>Menu</code> -&gt; <code>Library</code> -&gt; <code>Configure Emulators...</code> -&gt; <code>Add emulator...</code>.</p>"},{"location":"Integrations/Playnite-plugin/#settings","title":"Settings","text":"<p>The plugin needs to be configured before it can be used. To do this, go to <code>Menu</code> -&gt; <code>Library</code> -&gt; <code>Configure Integrations...</code> -&gt; <code>RomM</code>.</p>"},{"location":"Integrations/Playnite-plugin/#authentication","title":"Authentication","text":"<p>You'll need to enter the host URL of your RomM instance, as well as a username and password. Passwords are stored in plaintext in Playnite, so it's recommended to use a separate account with the \"VIEWER\" role. The host URL has the include the protocol (http/https) and should not include a trailing slash, e.g. <code>https://romm.example.com</code>.</p>"},{"location":"Integrations/Playnite-plugin/#emulator-path-mappings","title":"Emulator path mappings","text":"Field Description Example Required Emulator A built-in (or custom) emulator Dolphin \u2713 Emulator Profile A built-in (or custom) emulator profile Nintendo GameCube \u2713 Platform The platform or console Nintendo GameCube \u2713 Destination Path The path where downloaded ROMs will be stored <code>C:\\roms\\gc</code> \u2713 Auto-extract Whether compressed files should be extracted automatically Enabled Whether the mapping is enabled"},{"location":"Integrations/Playnite-plugin/#importing-your-library","title":"Importing your library","text":"<p>Once you've set up the plugin, you can import your library by going to <code>Menu</code> -&gt; <code>Library</code> -&gt; <code>Import RomM library</code>. All games matching the emulator path mappings will be imported into Playnite.</p> <p>Installing a game will download it from RomM and store it in the destination path. You can then launch the game from Playnite, and it will be launched using the configured emulator.</p> <p>By default, compressed files will be extracted automatically into a folder matching the game's name. You can modify this behavior in the settings page.</p>"},{"location":"Integrations/Tinfoil-integration/","title":"Tinfoil Integration","text":"<p>Tinfoil is a homebrew application for the Nintendo Switch, primarily used for installing and managing software, including games and updates, that are not obtained through official channels.</p> <p>This will help you configure Tinfoil for your Switch to work with your RomM library.</p>"},{"location":"Integrations/Tinfoil-integration/#setup","title":"Setup","text":""},{"location":"Integrations/Tinfoil-integration/#prepare","title":"Prepare","text":"<p>Please note down the following in order to make this as smooth as possible, as well as some pre-reqs:</p> <ul> <li>RomM updated to at least 3.5.0</li> <li>Add <code>DISABLE_DOWNLOAD_ENDPOINT_AUTH=true</code> to your environment variables and restart the container</li> <li>The URL you use to access RomM<ul> <li>This can either be <code>http</code> or <code>https</code></li> <li>The system will prefer local access though to avoid reverse proxy issues</li> </ul> </li> <li>Feed URL: <code>/api/tinfoil/feed</code></li> <li>The username and password you use to login to RomM</li> </ul>"},{"location":"Integrations/Tinfoil-integration/#configure","title":"Configure","text":"<p>Now it's time to configure your switch - Please follow the steps, this will assume you have Tinfoil installed and know how to use the basic functions of it.</p> <ol> <li>Open Tinfoil and go to File Browser</li> <li>Scroll over to the selection and press - in order to access the new menu.</li> <li>Enter these Options<ul> <li>Protocol - <code>http</code> or <code>https</code> depending on your connection</li> <li>Host - Host of your RomM instance</li> <li>Port - Port of your RomM Instance</li> <li>Path - /api/tinfoil/feed</li> <li>Username - Username of your RomM instance</li> <li>Password - Password of your RomM instance</li> <li>Title - Free text title, make it whatever you want.</li> <li>Enabled - Yes</li> </ul> </li> <li>Press X to save</li> <li>Now close out of Tinfoil and go back in, so it can scan the TitleIDs - if everything is correct you will have this custom <code>motd</code>:    \" RomM Switch Library\"</li> </ol> <p>Now you will be able to see the files in \"New Games\" tab of Tinfoil OR you can access it within the \"File Browser\" section that you setup earlier.</p> <p></p>"},{"location":"Integrations/Tinfoil-integration/#additional","title":"Additional","text":"<p>It didn't pull anything through to \"New Games\" and has not parsed any information about the titles?!</p> <p>That would be because the filename it has tried to pull had no TitleID (Improvement to RomM coming soon )</p> <p>Make sure the filename has the TitleID within the title like this: </p> <p>Once this is done, the next time Tinfoil is opened it is always parsed and re-scanned.</p>"},{"location":"Integrations/muOS-app/","title":"muOS app","text":"<p>muOS is a Custom Firmware (CFW) primarily for handheld devices. Configurable, themeable, friendly, easy-to-use.</p> <p>The muOS app connects to your RomM instance and allows you to fetch games wirelessly from your Anbernic device.</p>"},{"location":"Integrations/muOS-app/#setup","title":"Setup","text":""},{"location":"Integrations/muOS-app/#muos","title":"muOS","text":"<p>We leverage the muOS Archive Manager to install/update the app.</p> <ol> <li>Head to the latest release and download the <code>romm_muOS_install_x.x.x.zip</code> file.</li> <li>Move the compressed ZIP file to <code>/mnt/mmc/ARCHIVE</code> on your device.</li> <li>Launch the manager from <code>Applications &gt; Archive Manager</code> and select <code>romm_muOS_install_x.x.x.zip</code>.</li> <li>Once installed, make a copy of <code>/mnt/mmc/MUOS/application/RomM/env.template</code>, rename it to <code>/mnt/mmc/MUOS/application/RomM/.env</code>, edit it (any method is fine, we recommend SSH) and set <code>HOST</code>, <code>USERNAME</code> and <code>PASSWORD</code>.</li> <li>Launch the app from <code>Applications &gt; RomM</code> and start browsing your collection.</li> </ol>"},{"location":"Integrations/muOS-app/#emulationstation","title":"EmulationStation","text":"<p>We use PortMaster to install the app on devices running EmulationStation.</p> <ol> <li>Download the <code>RomM App.sh</code> file and <code>RomM/</code> folder to the <code>roms/ports</code> on your device.</li> <li>Make the <code>RomM App.sh</code> file executable by running <code>chmod +x RomM App.sh</code>.</li> <li>Launch EmulationStation and navigate to the <code>Ports</code> section.</li> </ol> <p>Note</p> <p>Your device must connect to your RomM instance or home server over Wi-Fi. The easiest method is to keep them on the same network and set HOST to the server's IP and the port where RomM is running. Advanced users or those using reverse proxies can configure their network and DNS settings as needed, using a URL with a domain like <code>https://romm.domain.com</code>.</p>"},{"location":"Maintenance/Migrating-to-new-machine/","title":"Migrating to new machine","text":""},{"location":"Maintenance/Migrating-to-new-machine/#migrating-romm-to-a-new-system","title":"Migrating RomM to a new system","text":"<p>Migrating RomM to a new system is possible, but all of the docker volumes must be copied for RomM to run correctly.</p> <p>Following the the setup in the Quick Start Guide these volumes are created be default</p> <p>RomM should be stopped before following this guide.</p> <pre><code>volumes:\n    mysql_data:\n    romm_resources:\n    romm_redis_data:\n\nservices:\n    romm:\n        volumes:\n            - romm_resources\n            - romm_redis_data\n    romm-db:\n        volumes:\n            - mysql_data\n</code></pre> <p>These volumes will need to manually moved to the new system. This is a straightforward process that includes determining their location and then copying them.</p>"},{"location":"Maintenance/Migrating-to-new-machine/#determining-the-docker-root-directory-and-copying-the-volumes","title":"Determining the docker root directory and copying the volumes","text":"<ol> <li>First determine the docker root directory</li> </ol> <pre><code>docker info | grep 'Docker Root Dir'\n</code></pre> <p>The expected output on a standard linux system:</p> <pre><code>Docker Root Dir: /var/lib/docker\n</code></pre> <ol> <li>Double check that the volumes have been created by docker and are owned by the docker engine</li> </ol> <pre><code>docker volume ls\n</code></pre> <p>Following the default quick start guide the following volumes will have been made</p> <pre><code>DRIVER    VOLUME NAME\nlocal     romm_mysql_data\nlocal     romm_romm_redis_data\nlocal     romm_romm_resources\n</code></pre> <ol> <li>Inspect each volume to get the exact location of the volume data</li> </ol> <pre><code>docker volume inspect romm_mysql_data | grep Mountpoint\n</code></pre> <ul> <li>The output of the <code>docker inspect</code> will return the exact storage location of the volumes data</li> </ul> <pre><code>\"Mountpoint\": \"/var/lib/docker/volumes/romm_mysql_data/_data\",\n</code></pre> <ol> <li>Copy those volumes into a new location so that they can be safely migrated to a new system each volume needs to be in its own folder</li> </ol> <pre><code>cp -r /var/lib/docker/volumes/romm_mysql_data/_data/ /your/new/path/romm_mysql_data\n\ncp -r /var/lib/docker/volumes/romm_romm_redis_data/_data /your/new/path/romm_romm_redis_data\n\ncp -r /var/lib/docker/volumes/romm_romm_resources/_data /your/new/path/romm_romm_resources\n</code></pre> <ol> <li>Update the <code>docker-compose.yml</code> volume paths with the newly copied data to determine RomM still loads correctly.</li> </ol> <pre><code>services:\n    romm:\n        volumes:\n            - /your/new/path/romm_romm_resources # romm_resources\n            - /your/new/path/romm_romm_redis_data # romm_redis_data\n    romm-db:\n        volumes:\n            - /your/new/path/romm_mysql_data # mysql_data\n</code></pre> <p>If RomM starts up correctly, then it is safe to copy all of your RomM folders to a new system.</p>"},{"location":"Maintenance/Scheduled-Tasks/","title":"Scheduled Tasks","text":""},{"location":"Maintenance/Scheduled-Tasks/#scheduled-tasks","title":"Scheduled tasks","text":"<p>Scheduled tasks can be enabled and configured with the following environment variables:</p> Variable Description Value ENABLE_SCHEDULED_RESCAN Enable scheduled re-scanning of library <code>true</code> SCHEDULED_RESCAN_CRON Cron expression for scheduled re-scanning <code>\"0 3 * * *\"</code> ENABLE_SCHEDULED_UPDATE_SWITCH_TITLEDB Enable scheduled updating of Switch TitleDB index <code>true</code> SCHEDULED_UPDATE_SWITCH_TITLEDB_CRON Cron expression for scheduled updating of Switch TitleDB <code>\"0 4 * * *\"</code> ENABLE_SCHEDULED_UPDATE_LAUNCHBOX_METADATA Enable scheduled updating of LaunchBox metadata <code>true</code> SCHEDULED_UPDATE_LAUNCHBOX_METADATA_CRON. Cron expression for scheduled updating of LaunchBox metadata <code>\"0 5 * * *\"</code>"},{"location":"Maintenance/Scheduled-Tasks/#scheduled-re-scan","title":"Scheduled re-scan","text":"<p>Users can opt to enable scheduled re-scans, and set the interval using Cron notation. Not that the scan will not completely re-scan every file, only catching those which have been added/updated.</p>"},{"location":"Maintenance/Scheduled-Tasks/#switch-titledb-update","title":"Switch titleDB update","text":"<p>Support was added for Nintendo Switch ROMs with filenames using the titleid/programid format (e.g. 0100000000010000.xci). If a file under the <code>switch</code> folder matches the regex, the scanner will use the index to attempt to match it to a game. If a match is found, the IGDB handler will use the matched name as the search term.</p> <p>The associated task updates the <code>/fixtures/switch_titledb.json</code> file at a regular interval to support new game releases.</p>"},{"location":"Maintenance/Scheduled-Tasks/#launchbox-metadata-update","title":"LaunchBox metadata update","text":"<p>RomM can also update the LaunchBox metadata database at a regular interval. This is onyl useful if you've enabled the LaunchBox metadata provider. The database is updated by downloading the latest version from the LaunchBox Games Database and replacing the existing one.</p>"},{"location":"Maintenance/Scheduled-Tasks/#file-system-watcher","title":"File system watcher","text":"<p>RomM can also monitor the filesystem for events (files created/moved/deleted) and schedules a re-scan of the platform (or entire library is a new platform was added).</p> <p>The watcher can be enabled and configured with the following environment variables:</p> Variable Description Value ENABLE_RESCAN_ON_FILESYSTEM_CHANGE Enable re-scanning of library when filesystem changes <code>true</code> RESCAN_ON_FILESYSTEM_CHANGE_DELAY Delay in minutes before re-scanning library when filesystem changes <code>5</code> <p>The watcher will monitor the <code>/library/roms</code> folder for changes to the filesystem, such as files being added, moved or deleted. It will ignore certain events (like modifying the file content or metadata), and will skip default OS files (like <code>.DS_Store</code> on mac).</p> <p>When a change is detected, a scan will be scheduled for sometime in the future (default 5 minutes). If other events are triggered between now and the time at which the scan starts, more platforms will be added to the scan list (or the scan may switch to a full scan). This is done to reduce the number of tasks scheduled when many big changes happen to the library (mass upload, new mount, etc.)</p>"},{"location":"Maintenance/Upgrading-to-3.0/","title":"Upgrading to 3.0","text":"<p>Version 3.0 of RomM introduces a number of breaking changes aimed at improving performance and usability, which will require some users to make specific changes before upgrading to ensure compatibility and to take full advantage of the new features.</p> <p>All of the following changes are reflected in the example docker-compose.yml file, which has been simplified greatly. Please read this entire file carefully, as failing to do so may cause RomM to become inaccessible or unresponsive.</p>"},{"location":"Maintenance/Upgrading-to-3.0/#dropped-support-for-sqlite","title":"Dropped support for SQLite","text":"<p>We're removed support for SQLite as we've faced a number of engineering issues with it in the past, and MariaDB has proven more stable and robust. If you currently use SQLite, we'll automatically migrate your data from SQLite to MariaDB, but you'll first need to make the following changes before upgrading to the latest image.</p> <p>In your environment variables, change <code>ROMM_DB_DRIVER</code> to <code>mariadb</code> (or remove it completely as it's no longer needed). You'll then want to add the following environment variables:</p> <pre><code>- DB_HOST=mariadb\n- DB_PORT=3306\n- DB_NAME=romm # Should match MYSQL_DATABASE in mariadb\n- DB_USER=romm-user # Should match MYSQL_USER in mariadb\n- DB_PASSWD= # Should match MYSQL_PASSWORD in mariadb\n</code></pre> <p>To setup a new MariaDB container, have a look at the example docker-compose.yml file.</p>"},{"location":"Maintenance/Upgrading-to-3.0/#authentication-as-standard","title":"Authentication as standard","text":"<p>To support new features like EmulatorJS and saves/states management, we've decided to require authentication for all users. Anyone currently running RomM with authentication disabled will need to remove the <code>ROMM_AUTH_ENABLED</code> environment variable and add the following ones:</p> <pre><code>- ROMM_AUTH_SECRET_KEY= # Generate a key with `openssl rand -hex 32`\n</code></pre> <p>We understand that this requirement for authentication might conflict with the way some users currently share their collection with others (unrestricted access for all). However, given the exciting new features we've built, and the ones we're looking to build in the near future, we feel this is the right decision for the project.</p>"},{"location":"Maintenance/Upgrading-to-3.0/#redis-is-now-built-in","title":"Redis is now built-in","text":"<p>As Redis is required for authentication to work, we've integrated it directly into the docker image. If you're currently running the experimental Redis container, you can remove it, along with these environment variables:</p> <pre><code>- ENABLE_EXPERIMENTAL_REDIS\n- REDIS_HOST\n- REDIS_PORT\n</code></pre>"},{"location":"Maintenance/Upgrading-to-3.0/#configuration-folder","title":"Configuration folder","text":"<p>Mounting the <code>config.yml</code> file is now done by mounting a <code>config</code> folder.. Place your existing <code>config.yml</code> file inside a folder and bind it to <code>/romm/config</code>:</p> <pre><code>- /path/to/config:/romm/config\n</code></pre> <p>Updated config.example.yml</p>"},{"location":"Maintenance/Upgrading-to-3.0/#support-for-saves-states-and-screenshots","title":"Support for saves, states and screenshots","text":"<p>This version introduces preliminary support for uploading/downloading saves, states and screenshots (read more about it in the 3.0 release notes). We've added a new volume mapping for these types of files called <code>assets</code>, which you'll want to bind to a local folder (or volume) so they'll persist. In your volumes section, add the following mapping, where <code>/path/to/assets/</code> is some folder where you'll want to store these assets (and make sure that folder exists):</p> <pre><code>- /path/to/assets:/romm/assets\n</code></pre> <p>We recommend creating a folder next to your <code>library</code>/the one mapped to <code>/romm/library</code> in order to keep all your RomM files in the same place.</p>"},{"location":"Miscellaneous/Brand-Guidelines/","title":"Branding Guidelines","text":"<p>We\u2019ve put together some guidelines for those anyone who wants to use our name and logo. In this context, \"RomM\", \"The RomM Project\", \"the project\", \"we\", \"us\", and \"our\" refer to the RomM project.</p>"},{"location":"Miscellaneous/Brand-Guidelines/#the-logo","title":"The Logo","text":"The logo should always be used in its standard colors:     Color Hex Code #371f69 #553e98 #ede5f8 #bea4e1 #e6c7a7 #e1a38d"},{"location":"Miscellaneous/Brand-Guidelines/#do-these-things","title":"Do these things","text":"<ul> <li>Use our logo to link to any page or site owned or operated by the project.</li> <li>Use our logo in a blog post or news article about the project.</li> <li>Use our logo to inform others that your project integrates with RomM.</li> <li>Always use our logo in the colors provided.</li> <li>Always use our name in a way that makes it clear you are not affiliated with the project.</li> </ul> <p>If you're working on a project that integrates with RomM and would like to use/remix the logo, please reach out to us first. We'd love to hear about what you're working on!</p>"},{"location":"Miscellaneous/Brand-Guidelines/#please-dont-do-these-things","title":"Please don't do these things","text":"<ul> <li>Use our name or logo in any way that would suggest you are us, are endorsed by us, or are part of the project.</li> <li>Use our name or logo in a way that implies partnership, sponsorship, or endorsement.</li> <li>Use our name or logo as the name or logo for your project, product, service, social media account, company, or website.</li> <li>Use our name or logo to promote, advertise or sell any private business, closed-source software, commercial product, or paid service.</li> </ul>"},{"location":"Miscellaneous/FAQs/","title":"FAQs","text":""},{"location":"Miscellaneous/FAQs/#when-will-the-next-version-of-romm-be-available","title":"When will the next version of RomM be available?","text":"<p>When it's ready.</p>"},{"location":"Miscellaneous/FAQs/#when-will-the-version-after-that-one-release","title":"When will the version after that one release?","text":"<p>After the upcoming version is released.</p>"},{"location":"Miscellaneous/FAQs/#when-will-x-feature-be-available","title":"When will X feature be available?","text":"<p>Sometime between now and the heat death of the universe.</p>"},{"location":"Miscellaneous/FAQs/#when-will-version-xxx-of-romm-or-any-of-the-romm-clientsappsplugins-be-released","title":"When will version <code>x.x.x</code> of RomM (or any of the RomM clients/apps/plugins) be released?","text":"<p>Same as above question.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/","title":"OIDC Setup With Authelia","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#oidc-setup-with-authelia","title":"OIDC Setup With Authelia","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#a-quick-rundown-of-the-technologies","title":"A quick rundown of the technologies","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#what-is-authelia","title":"What is Authelia?","text":"<p>Authelia is an open-source authentication and authorization server providing two-factor authentication and single sign-on (SSO) for your applications via a web portal. It acts as a companion for reverse proxies by allowing, denying, or redirecting requests. Authelia can be deployed alongside your other services to centralize identity management.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#what-is-oauth2","title":"What is OAuth2?","text":"<p>OAuth2 (Open Authorization 2.0) is an industry-standard protocol for authorization. It allows applications (clients) to gain limited access to user accounts on an HTTP service without sharing the user\u2019s credentials. Instead, it uses access tokens to facilitate secure interactions. OAuth2 is commonly used in scenarios where users need to authenticate via a third-party service.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#what-is-openid-connect-oidc","title":"What is OpenID Connect (OIDC)?","text":"<p>OIDC (OpenID Connect) is an identity layer built on top of OAuth2. While OAuth2 primarily handles authorization, OIDC adds authentication, enabling applications to verify a user\u2019s identity and obtain profile information. This makes OIDC suitable for SSO solutions, where user identity is central to access management.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#setting-up-a-provider-and-application-in-authelia","title":"Setting up a Provider and Application in Authelia","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#step-1-install-and-configure-authelia","title":"Step 1: Install and Configure Authelia","text":"<p>Before setting up a provider and app, ensure that Authelia is installed and running by following the getting started and OIDC provider guides.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#step-2-add-a-client","title":"Step 2: Add a client","text":"<p>First, in Authelia's <code>configuration.yml</code>, at <code>identity_providers</code> \u2192 <code>oidc</code> \u2192 <code>claims_policies</code> you'll need to add a Claims Policy if you do not already have one with the specified claims:</p> <pre><code># identity_providers:\n#   oidc:\nclaims_policies:\n    with_email: # You can name this however you want\n        id_token:\n            [\n                \"email\",\n                \"email_verified\",\n                \"alt_emails\",\n                \"preferred_username\",\n                \"name\",\n            ]\n</code></pre> <p>To read more about claims_policies and why you need it for RomM, see this section in the Authelia docs.</p> <p>Then, in the same <code>configuration.yml</code>, under <code>identity_providers</code> \u2192 <code>oidc</code> \u2192 <code>clients</code>, add a new entry:</p> <ul> <li>A random <code>client_id</code> and <code>client_secret</code><ul> <li>See the official recommendations on how to generate these.</li> </ul> </li> <li><code>public</code> should be set to <code>false</code>.</li> <li><code>redirect_uris</code> should include your RomM instance's URL + <code>/api/oauth/openid</code> (e.g., <code>http://romm.host.local/api/oauth/openid</code>).</li> <li><code>claims_policy</code> is the name of the entry at claims_policies that you just added (or already had).</li> <li><code>scopes</code> includes <code>openid</code>, <code>email</code> and <code>profile</code>.</li> <li><code>token_endpoint_auth_method</code> should be set to <code>client_secret_basic</code>.</li> <li><code>userinfo_signed_response_alg</code> should be set to <code>none</code>.</li> </ul> <p>Refer to the official docs for more details.</p> <p>This entry should look like this:</p> <pre><code>#identity_providers:\n#  oidc:\n#    clients:\n- client_id: \"&lt;randomly_generated&gt;\" # read above for how generate\n  client_name: \"RomM\" # will be displayed in Authelia to users\n  client_secret: \"$pbkdf2-sha512$randomly_generated\" # read above for how generate\n  public: false\n  authorization_policy: \"two_factor\" # or one_factor, depending on your needs\n  grant_types:\n      - authorization_code\n  redirect_uris:\n      - \"http://romm.host.local/api/oauth/openid\"\n  claims_policy: \"with_email\"\n  scopes:\n      - \"openid\"\n      - \"email\"\n      - \"profile\"\n  userinfo_signed_response_alg: \"none\"\n  token_endpoint_auth_method: \"client_secret_basic\"\n</code></pre>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#step-3-configure-romm-environment-variables","title":"Step 3: Configure RomM Environment Variables","text":"<p>To enable OIDC authentication in RomM, you need to set the following environment variables:</p> <ul> <li><code>OIDC_ENABLED</code>: Set to <code>true</code> to enable OIDC authentication.</li> <li><code>OIDC_PROVIDER</code>: The lowercase name of the provider (<code>authelia</code>).</li> <li><code>OIDC_CLIENT_ID</code>: The client ID copied from the Authelia application.</li> <li><code>OIDC_CLIENT_SECRET</code>: The generated output from <code>Random Password</code>.</li> <li><code>OIDC_REDIRECT_URI</code>: The redirect URI configured in the Authelia provider, in the format <code>http://romm.host.local/api/oauth/openid</code>.</li> <li><code>OIDC_SERVER_APPLICATION_URL</code>: The base URL for you Authelia instance, e.g. <code>http://authelia.host.local</code>.</li> </ul>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#step-4-set-your-email-in-romm","title":"Step 4: Set your Email in RomM","text":"<p>In RomM, open your user profile and set your email address. This email has to match your user email in Authelia.</p> <p></p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authelia/#step-5-test-the-integration","title":"Step 5: Test the Integration","text":"<p>After configuring the environment variables, restart (or stop and remove) your RomM instance and navigate to the login page. You should see an option to log in using OIDC. Click on the OIDC button, and you'll be redirected to Authelia for authentication. Once authenticated, you'll be redirected back to RomM.</p> <p></p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/","title":"OIDC Setup With Authentik","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#oidc-setup-with-authentik","title":"OIDC Setup With Authentik","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#a-quick-rundown-of-the-technologies","title":"A quick rundown of the technologies","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#what-is-authentik","title":"What is Authentik?","text":"<p>Authentik is an open-source identity provider (IdP) designed to manage authentication, authorization, and user management across applications. It supports modern authentication protocols and provides tools to simplify integration, including single sign-on (SSO), multi-factor authentication (MFA), and auditing capabilities. Authentik can be deployed alongside your other services to centralize identity management.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#what-is-oauth2","title":"What is OAuth2?","text":"<p>OAuth2 (Open Authorization 2.0) is an industry-standard protocol for authorization. It allows applications (clients) to gain limited access to user accounts on an HTTP service without sharing the user\u2019s credentials. Instead, it uses access tokens to facilitate secure interactions. OAuth2 is commonly used in scenarios where users need to authenticate via a third-party service.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#what-is-openid-connect-oidc","title":"What is OpenID Connect (OIDC)?","text":"<p>OIDC (OpenID Connect) is an identity layer built on top of OAuth2. While OAuth2 primarily handles authorization, OIDC adds authentication, enabling applications to verify a user\u2019s identity and obtain profile information. This makes OIDC suitable for SSO solutions, where user identity is central to access management.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#setting-up-a-provider-and-application-in-authentik","title":"Setting up a Provider and Application in Authentik","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#step-1-install-and-configure-authentik","title":"Step 1: Install and Configure Authentik","text":"<p>Before setting up a provider and app, ensure that Authentik is installed and running by following the official installation guide..</p> <ol> <li>Access Authentik via its web interface.</li> <li>Log in as an administrator.</li> <li>Navigate to the \u201cAdmin Interface\u201d to configure the necessary components.</li> </ol> <p></p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#step-2-create-a-provider","title":"Step 2: Create a Provider","text":"<p>A provider in Authentik acts as the bridge between RomM and Authentik.</p> <ol> <li>Navigate to Providers:<ul> <li>Go to the \"Providers\" section in the Authentik admin interface.</li> </ul> </li> <li>Create a New Provider:<ul> <li>Click on \u201cCreate\u201d and choose the protocol (e.g., \u201cOIDC Provider\u201d).   </li> </ul> </li> <li>Select \"OAuth2/OpenID Provider\" </li> <li>Configure Provider Settings:<ul> <li>Name: Assign a unique name to the provider (e.g., \"RomM OIDC Provider\").</li> <li>Authorization flow: Select implicit consent.</li> <li>Redirect URIs: Add your RomM instance's URL + <code>/api/oauth/openid</code> (e.g., <code>http://romm.host.local/api/oauth/openid</code>).</li> </ul> </li> <li>Copy the Client ID and Secret:<ul> <li>You'll need these to set <code>OIDC_CLIENT_ID</code> and <code>OIDC_CLIENT_SECRET</code> in your RomM instance.   </li> </ul> </li> <li>Click Create.</li> </ol>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#step-3-register-an-application","title":"Step 3: Register an Application","text":"<p>An app in Authentik represents the external service (in our case RomM) that will use the provider for authentication.</p> <ol> <li>Navigate to Applications:<ul> <li>Go to the \"Applications\" section in the admin interface.   </li> </ul> </li> <li>Create a New Application:<ul> <li>Click on \u201cCreate\u201d and configure the app settings: - Name: Provide a recognizable name (e.g., \"RomM\"). - Slug: Create a unique identifier for the app (e.g., <code>romm</code>). - Provider: Link the app to the previously created provider, \"RomM OIDC Provider\".   </li> </ul> </li> <li>Click Create.</li> </ol>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#step-4-configure-romm-environment-variables","title":"Step 4: Configure RomM Environment Variables","text":"<p>To enable OIDC authentication in RomM, you need to set the following environment variables:</p> <ul> <li><code>OIDC_ENABLED</code>: Set to <code>true</code> to enable OIDC authentication.</li> <li><code>OIDC_PROVIDER</code>: The lowercase name of the provider (<code>authentik</code>).</li> <li><code>OIDC_CLIENT_ID</code>: The client ID copied from the Authentik application.</li> <li><code>OIDC_CLIENT_SECRET</code>: The client secret copied from the Authentik application.</li> <li><code>OIDC_REDIRECT_URI</code>: The redirect URI configured in the Authentik provider, in the format <code>http://romm.host.local/api/oauth/openid</code>.</li> <li><code>OIDC_SERVER_APPLICATION_URL</code>: The URL of the Authentik application, e.g., <code>http://authentik.host.local/application/o/romm</code>.</li> </ul>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#step-5-set-your-email-in-romm","title":"Step 5: Set your Email in RomM","text":"<p>In RomM, open your user profile and set your email address. This email has to match your user email in Authentik.</p> <p></p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Authentik/#step-6-test-the-integration","title":"Step 6: Test the Integration","text":"<p>After configuring the environment variables, restart (or stop and remove) your RomM instance and navigate to the login page. You should see an option to log in using OIDC. Click on the OIDC button, and you'll be redirected to Authentik for authentication. Once authenticated, you'll be redirected back to RomM.</p> <p></p>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/","title":"OIDC Setup With PocketID","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#oidc-setup-with-pocket-id","title":"OIDC Setup With Pocket ID","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#a-quick-rundown-of-the-technologies","title":"A quick rundown of the technologies","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#what-is-pocket-id","title":"What is Pocket ID?","text":"<p>Pocket ID is a simple OIDC provider that allows users to authenticate with their passkeys to your services.</p> <p>The goal of Pocket ID is to be a simple and easy-to-use. There are other self-hosted OIDC providers like Keycloak or ORY Hydra but they are often too complex for simple use cases.</p> <p>Additionally, what makes Pocket ID special is that it only supports passkey authentication, which means you don\u2019t need a password.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#what-is-oauth2","title":"What is OAuth2?","text":"<p>OAuth2 (Open Authorization 2.0) is an industry-standard protocol for authorization. It allows applications (clients) to gain limited access to user accounts on an HTTP service without sharing the user\u2019s credentials. Instead, it uses access tokens to facilitate secure interactions. OAuth2 is commonly used in scenarios where users need to authenticate via a third-party service.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#what-is-openid-connect-oidc","title":"What is OpenID Connect (OIDC)?","text":"<p>OIDC (OpenID Connect) is an identity layer built on top of OAuth2. While OAuth2 primarily handles authorization, OIDC adds authentication, enabling applications to verify a user\u2019s identity and obtain profile information. This makes OIDC suitable for SSO solutions, where user identity is central to access management.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#setting-up-a-client-in-pocket-id","title":"Setting up a client in Pocket ID","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#step-1-install-and-configure-pocket-id","title":"Step 1: Install and Configure Pocket ID","text":"<p>Before setting up the OIDC client, ensure that Pocket ID is installed and running by following the setup guide.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#step-2-add-a-client","title":"Step 2: Add a client","text":"<p>Once you have logged in and configured a PassKey you now need to create an OIDC client, this will let Pocket ID know about the application that needs to be configured, and will give you the relevant keys to add to the RomM compose file.</p> <ul> <li>Make sure within Application Configuration that \"Emails Verified\" is ticked, most OIDC apps will need this.</li> <li>Go to OIDC Client</li> <li>Click Add OIDC Client<ul> <li>Name: RomM</li> <li>Callback URLs: <code>https://{host}/api/oauth/openid</code></li> </ul> </li> <li>Click Save</li> <li>Stay on this page, you will be shown your client secret only THIS time.</li> </ul>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#step-3-configure-romm-environment-variables","title":"Step 3: Configure RomM Environment Variables","text":"<p>To enable OIDC authentication in RomM, you need to set the following environment variables:</p> <ul> <li><code>OIDC_ENABLED</code>: Set to <code>true</code> to enable OIDC authentication.</li> <li><code>OIDC_PROVIDER</code>: The lowercase name of the provider (<code>pocketid</code>).</li> <li><code>OIDC_CLIENT_ID</code>: The client ID copied from the Pocket ID application</li> <li><code>OIDC_CLIENT_SECRET</code>: The client secret that is showing within your Pocket ID application.</li> <li><code>OIDC_REDIRECT_URI</code>: The redirect URI configured in the Pocket ID provider, in the format <code>https://{host}/api/oauth/openid</code>.</li> <li><code>OIDC_SERVER_APPLICATION_URL</code>: The authorization URL for you Pocket ID instance, e.g. <code>https://id.host.local</code>.</li> </ul>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#step-4-set-your-email-in-romm","title":"Step 4: Set your Email in RomM","text":"<p>In RomM, open your user profile and set your email address. This email has to match your user email in Pocket ID.</p> <p></p>"},{"location":"OIDC-Guides/OIDC-Setup-With-PocketID/#step-5-test-the-integration","title":"Step 5: Test the Integration","text":"<p>After configuring the environment variables, restart (or stop and remove) your RomM instance and navigate to the login page. You should see an option to log in using OIDC. Click on the OIDC button, and you'll be redirected to Pocket ID for authentication. Once authenticated, you'll be redirected back to RomM.</p> <p></p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/","title":"OIDC Setup With Zitadel","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#oidc-setup-with-zitadel","title":"OIDC Setup With Zitadel","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#a-quick-rundown-of-the-technologies","title":"A quick rundown of the technologies","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#what-is-zitadel","title":"What is Zitadel","text":"<p>Zitadel is an enterprise-grade, open-source identity and access management (IAM) platform that supports OAuth2, OpenID Connect, SAML, and passwordless authentication. It's used to manage users, roles, and secure login for web and cloud applications.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#what-is-oauth2","title":"What is OAuth2?","text":"<p>OAuth2 (Open Authorization 2.0) is an industry-standard protocol for authorization. It allows applications (clients) to gain limited access to user accounts on an HTTP service without sharing the user\u2019s credentials. Instead, it uses access tokens to facilitate secure interactions. OAuth2 is commonly used in scenarios where users need to authenticate via a third-party service.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#what-is-openid-connect-oidc","title":"What is OpenID Connect (OIDC)?","text":"<p>OIDC (OpenID Connect) is an identity layer built on top of OAuth2. While OAuth2 primarily handles authorization, OIDC adds authentication, enabling applications to verify a user\u2019s identity and obtain profile information. This makes OIDC suitable for SSO solutions, where user identity is central to access management.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#setting-up-a-client-in-zitadel","title":"Setting up a client in Zitadel","text":""},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-1-install-and-configure-zitadel","title":"Step 1: Install and Configure Zitadel","text":"<p>Before setting up the OIDC client, ensure that Zitadel is installed and running by following the setup guide.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-2-create-a-project","title":"Step 2: Create a Project","text":"<p>Once you have logged in and changed the default password for your Zitadel organization, create a new Project (i.e Romm). This will be the basic settings for roles and authorization.</p> <p>In the \"General\" tab, there are options to allow the following:</p> <ul> <li>Assert Roles on Authentication</li> </ul> <p>Unnecessary: Romm (at this time) does not allow granting permissions based on role, everyone gets viewer and will have to be changed manually using an admin account if desired.</p> <ul> <li>Check authorization on Authentication</li> </ul> <p>Recommended: If you allow registration to your platform, then anyone who registers can instantly access Romm (although only as a viewer, which may not be a problem for some)</p> <ul> <li>Check for Project on Authentication</li> </ul> <p>Optional: It could be used if you plan on separating users by organizations for other applications, but creating separate organizations is not typically useful for general self-hosting purposes</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-25-optional-if-you-enabled-check-authorization-on-authentication-grant-users-access-to-the-project","title":"Step 2.5 (Optional: If you enabled \"Check authorization on Authentication\"): Grant user(s) access to the Project","text":"<p>Click on the Authorization tab and click New.</p> <p>Enter the user(s) and click Continue</p> <p>It should say \"No role has been created yet.\", but this is fine, you can just click Save and it should bring you back to the Authorization page with your user(s) listed with no roles</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-3-create-the-application","title":"Step 3: Create the application","text":"<p>On the General tab, click the New button under Applications.</p> <p>(Check \"I'm a pro. Skip this wizard.\" to enter the information quicker)</p> <ul> <li><code>Name</code>: RomM (or whatever you want)</li> <li><code>Application Type</code>: Web</li> <li><code>Grant Types</code>: Authorization Code</li> <li><code>Response Types</code>: Code</li> <li><code>Authentication Method</code>: Basic</li> <li><code>Redirect URIs</code>: <code>https://romm.domain.com/api/oauth/openid</code></li> <li><code>Post Logout URIs</code>: <code>https://romm.domain.com/</code></li> </ul> <p>Click Create.</p> <ul> <li>Stay on this page or copy these down elsewhere, the secret will only show this one time</li> </ul>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-3-configure-romm-environment-variables","title":"Step 3: Configure RomM Environment Variables","text":"<p>To enable OIDC authentication in RomM, you need to set the following environment variables:</p> <ul> <li><code>OIDC_ENABLED</code>: Set to <code>true</code> to enable OIDC authentication.</li> <li><code>OIDC_PROVIDER</code>: The name of the provider <code>Zitadel</code>.</li> <li><code>OIDC_CLIENT_ID</code>: The client ID copied from the Zitadel application</li> <li><code>OIDC_CLIENT_SECRET</code>: The client secret generated from the Zitadel application</li> <li><code>OIDC_REDIRECT_URI</code>: The redirect URI configured in Zitadel <code>https://rom.domain.com/api/oauth/openid</code>.</li> <li><code>OIDC_SERVER_APPLICATION_URL</code>: The domain for your Zitadel instance <code>https://zitadel.domain.com</code>. (The discovery URL for Zitadel is on the basedomain under /.well-known/openid-configuration)</li> </ul>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-4-enable-claims-from-id-token-this-resolves-the-email-is-missing-from-token-error","title":"Step 4: Enable claims from ID Token (this resolves the \"Email is missing from token\" error)","text":"<p>Click close to finish creating the application and then go to the Token Settings tab.</p> <p>Check \"User Info inside ID Token\" and click Save</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-5-set-your-email-in-romm","title":"Step 5: Set your Email in RomM","text":"<p>For your existing RomM admin account, open your user profile on Zitadel and set your email address. This email has to match your user email in Zitadel.</p>"},{"location":"OIDC-Guides/OIDC-Setup-With-Zitadel/#step-6-test-the-integration","title":"Step 6: Test the Integration","text":"<p>After configuring the environment variables, restart (or stop and remove) your RomM instance and navigate to the login page. You should see the option \"LOGIN WITH ZITADEL\". Click on it and you'll be redirected to Zitadel for authentication. Once authenticated, you'll be redirected back to RomM.</p>"},{"location":"Platforms-and-Players/Custom-Platforms/","title":"Custom Platforms","text":"<p>While RomM supports every platform listed in the Supported Platforms page, the list is not exhaustive, and you may have ROMs in your library for other platforms. To load those files into RomM, place them in a folder for each platform, and give it a name that's all lowercase, with <code>-</code> to separate words, and with no white spaces. For example, <code>pocket-challenge-v2</code> would map to <code>Pocket Challenge V2</code>, and display the default platform icon in the app.</p> <p>Furthermore, only a portion of the supported platforms have custom icons built-in. If your library has platforms that aren't listed in the platforms icons list, RomM will display a default fallback icon.</p> <p>If you'd like to load your own custom icons for missing platforms, you can mount <code>/var/www/html/assets/platforms</code> to some local folder and place all of your custom <code>.ico</code> platform icons in there. You'll also want to download the ones provided in this project and place them in the same folder. If you'd like to use your own icons for platforms already supported by RomM, just replace the file with another using the exact same name.</p> <p>The name of the <code>.ico</code> file should match the slug of the platform on IGDB. For example, the URL for the AmstradCPC is https://www.igdb.com/platforms/acpc, so the filename should be <code>acpc.ico</code>.</p> <p></p>"},{"location":"Platforms-and-Players/EmulatorJS-Player/","title":"EmulatorJS","text":"<p>EmulatorJS is a web-based emulator for various system; that is, it allows you to run old games in your web browser. It's based on <code>RetroArch</code> compiled with <code>Emscripten</code>, which is a toolchain for compiling C and C++ code to WebAssembly.</p> <p>Warning</p> <p>Due to a change by Apple in iOS 18.2, emulation is severely limited, and likely non-functional, on iOS 18.2-18.3 devices. This was fixed in iOS 18.4</p> <p>Warning</p> <p>PSP emulation with the <code>ppsspp</code> core and MS-DOS with the <code>dosbox-pure</code> core are not currently supported when using the Console mode.</p> <p>Warning</p> <p>Emulation is a complex and resource-intensive process. As such, it may not work well in all browser, especially older or less powerful ones. If you're having trouble running a game, try using a different browser or device.</p>"},{"location":"Platforms-and-Players/EmulatorJS-Player/#loading-saves-and-states","title":"Loading saves and states","text":"<p>Our integration with EmulatorJS automates the process of loading and save files and save states. Before starting the game, select a save and/or state file to load (if one is available). Anytime you manually save the game (or create a save state) by clicking the save or \"save and quit\" buttons, the save and state files stored with RomM will be updated, so there's no need to manually download or upload them.</p>"},{"location":"Platforms-and-Players/EmulatorJS-Player/#supported-systems","title":"Supported systems","text":"<p>Note that only the following systems are currently supported:</p> <ul> <li>3DO</li> <li>Amiga</li> <li>Arcade/MAME</li> <li>Atari 2600</li> <li>Atari 5200</li> <li>Atari 7800</li> <li>Atari Jaguar</li> <li>Atari Lynx</li> <li>Commodore 64</li> <li>ColecoVision</li> <li>DOOM</li> <li>Neo Geo Pocket</li> <li>Neo Geo Pocket Color</li> <li>MS-DOS</li> <li>Nintendo 64</li> <li>Nintendo Entertainment System (NES)</li> <li>Nintendo Family Computer (Famicom)</li> <li>Nintendo DS</li> <li>Game Boy</li> <li>Game Boy Color</li> <li>Game Boy Advance</li> <li>PC-FX</li> <li>PlayStation (PS)</li> <li>PlayStation Portable (PSP)</li> <li>Sega 32X</li> <li>Sega CD</li> <li>Sega Game Gear</li> <li>Sega Master System</li> <li>Sega Genesis/Megadrive</li> <li>Sega Saturn</li> <li>Super Nintendo Entertainment System (SNES)</li> <li>Super Famicom</li> <li>TurboGraphx-16/PC Engine</li> <li>Virtual Boy</li> <li>WonderSwan</li> <li>WonderSwan Color</li> </ul>"},{"location":"Platforms-and-Players/MS-DOS/","title":"MS-DOS","text":"<p>DOS is now supported in versions of RomM 4.0 and above thanks to the EmulatorJS player - Simply create a DOS platform to enable the integration</p> <p>Info</p> <p>I highly suggest you upload the games as .zip as the core can take advantage of unzipping and auto mounting options which are explained more below.</p> <p>Info</p> <p>Loading and saving states ARE supported so it's possible you only need to do the below steps once to load the game.</p>"},{"location":"Platforms-and-Players/MS-DOS/#running-games","title":"Running Games","text":"<p>Once you have the play button in the platform available for you there is some additional work you need to do in order to get the games playable and running. You first need to identify what DOS game you are trying to run, there would be three categories</p> <ul> <li>Homebrew<ul> <li>Made by an indie dev, usually just an .exe file which will work fine in DOS once mounted.</li> </ul> </li> <li>Demo<ul> <li>Most sites which offer DOS games are shareware demo versions, these function similiar to homebrew and will have all the files needed within the folder.</li> </ul> </li> <li>Retail<ul> <li>These will need the CD mounted alongside the game files in order to play the games, this can get tricky and will be a unique per game basis but once you have cracked it you won't need to modify it again.</li> </ul> </li> </ul> <p>The official method to run the games from the EmulatorJS dev is the following (Only works for Homebrew and Demos):</p> <ul> <li>Select commandline from the initial loading screen</li> <li><code>mount A / -t floppy</code> - This will mount the location of the files</li> <li><code>A:</code> - This will take you to the location of the files</li> <li><code>dir</code> - to find the .EXE file</li> <li><code>filename.exe</code> - This will run the .exe and run the game, you might need some additional configuration but that is purely on the dosbox side and you might need to run the setup.exe file or a file name similiar.</li> </ul>"},{"location":"Platforms-and-Players/MS-DOS/#advanced-running-games","title":"Advanced Running Games","text":"<p>Warning</p> <p>This is not for the faint of heart and will require a lot of trial and error.</p> <p>As the system is using DOSBOX pure it has a neat trick where it will run .CONF files it finds and automatically mount locations and run .exe files automatically, at the minute this is highly experimental and might be more effort then it is worth, but if you want the files running perfectly then I would suggest you look into this method, but it is extremely trail and error.</p> <p>When you run a game in DOSBOX Pure, before it runs and mounts anything it will look for a .conf file and follow those instructions, this way we can actually auto mount locations, mount the required CDs and play the game without typing anything, you just click play, the auto mount does everything in the background and you are presented with the game.</p> <p>This is an example using the doom shareware file which has all the files in the folder.</p> <ul> <li>Check the folder and make sure there is an .exe file for the game, make sure there is no <code>*.ins</code>, <code>*.cue</code> or <code>*.bin</code> files, if these exist it usually means this is a CD required game and these instructions will not work</li> <li>Create a new text document named the same as the .exe (DOOM.conf) and add the following information:</li> </ul> DOOM.conf Example <pre><code># This is the configurationfile for DOSBox 0.74. (Please use the latest version of DOSBox)\n# Lines starting with a # are commentlines and are ignored by DOSBox.\n# They are used to (briefly) document the effect of each option.\n\n[sdl]\n#       fullscreen: Start dosbox directly in fullscreen. (Press ALT-Enter to go back)\n#       fulldouble: Use double buffering in fullscreen. It can reduce screen flickering, but it can also result in a slow DOSBox.\n#   fullresolution: What resolution to use for fullscreen: original or fixed size (e.g. 1024x768).\n#                     Using your monitor's native resolution with aspect=true might give the best results.\n#                     If you end up with small window on a large screen, try an output different from surface.\n# windowresolution: Scale the window to this size IF the output device supports hardware scaling.\n#                     (output=surface does not!)\n#           output: What video system to use for output.\n#                   Possible values: surface, overlay, opengl, openglnb, ddraw.\n#         autolock: Mouse will automatically lock, if you click on the screen. (Press CTRL-F10 to unlock)\n#      sensitivity: Mouse sensitivity.\n#      waitonerror: Wait before closing the console if dosbox has an error.\n#         priority: Priority levels for dosbox. Second entry behind the comma is for when dosbox is not focused/minimized.\n#                     pause is only valid for the second entry.\n#                   Possible values: lowest, lower, normal, higher, highest, pause.\n#       mapperfile: File used to load/save the key/event mappings from. Resetmapper only works with the defaul value.\n#     usescancodes: Avoid usage of symkeys, might not work on all operating systems.\n\nfullscreen=TRUE\nfulldouble=false\nfullresolution=Fixed\nwindowresolution=1280x800\noutput=direct3d\nautolock=true\nsensitivity=100\nwaitonerror=true\npriority=higher,normal\nmapperfile=mapper-0.74.map\nusescancodes=true\n\n[dosbox]\n# language: Select another language file.\n#  machine: The type of machine tries to emulate.\n#           Possible values: hercules, cga, tandy, pcjr, ega, vgaonly, svga_s3, svga_et3000, svga_et4000, svga_paradise, vesa_nolfb, vesa_oldvbe.\n# captures: Directory where things like wave, midi, screenshot get captured.\n#  memsize: Amount of memory DOSBox has in megabytes.\n#             This value is best left at its default to avoid problems with some games,\n#             though few games might require a higher value.\n#             There is generally no speed advantage when raising this value.\n\nlanguage=\nmachine=svga_s3\ncaptures=.\\Captures\\\nmemsize=16\n\n[render]\n# frameskip: How many frames DOSBox skips before drawing one.\n#    aspect: Do aspect correction, if your output method doesn't support scaling this can slow things down!.\n#    scaler: Scaler used to enlarge/enhance low resolution modes.\n#              If 'forced' is appended, then the scaler will be used even if the result might not be desired.\n#            Possible values: none, normal2x, normal3x, advmame2x, advmame3x, advinterp2x, advinterp3x, hq2x, hq3x, 2xsai, super2xsai, supereagle, tv2x, tv3x, rgb2x, rgb3x, scan2x, scan3x.\n\nframeskip=0\naspect=false\nscaler=normal3x\n\n[cpu]\n#      core: CPU Core used in emulation. auto will switch to dynamic if available and appropriate.\n#            Possible values: auto, dynamic, normal, simple.\n#   cputype: CPU Type used in emulation. auto is the fastest choice.\n#            Possible values: auto, 386, 386_slow, 486_slow, pentium_slow, 386_prefetch.\n#    cycles: Amount of instructions DOSBox tries to emulate each millisecond.\n#            Setting this value too high results in sound dropouts and lags.\n#            Cycles can be set in 3 ways:\n#              'auto'          tries to guess what a game needs.\n#                              It usually works, but can fail for certain games.\n#              'fixed #number' will set a fixed amount of cycles. This is what you usually need if 'auto' fails.\n#                              (Example: fixed 4000).\n#              'max'           will allocate as much cycles as your computer is able to handle.\n#\n#            Possible values: auto, fixed, max.\n#   cycleup: Amount of cycles to decrease/increase with keycombo.(CTRL-F11/CTRL-F12)\n# cycledown: Setting it lower than 100 will be a percentage.\n\ncore=auto\ncputype=auto\ncycles=max\ncycleup=10\ncycledown=20\n\n[mixer]\n#   nosound: Enable silent mode, sound is still emulated though.\n#      rate: Mixer sample rate, setting any device's rate higher than this will probably lower their sound quality.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n# blocksize: Mixer block size, larger blocks might help sound stuttering but sound will also be more lagged.\n#            Possible values: 1024, 2048, 4096, 8192, 512, 256.\n# prebuffer: How many milliseconds of data to keep on top of the blocksize.\n\nnosound=false\nrate=22050\nblocksize=2048\nprebuffer=10\n\n[midi]\n#     mpu401: Type of MPU-401 to emulate.\n#             Possible values: intelligent, uart, none.\n# mididevice: Device that will receive the MIDI data from MPU-401.\n#             Possible values: default, win32, alsa, oss, coreaudio, coremidi, none.\n# midiconfig: Special configuration options for the device driver. This is usually the id of the device you want to use.\n#               See the README/Manual for more details.\n\nmpu401=intelligent\nmididevice=default\nmidiconfig=\n\n[sblaster]\n#  sbtype: Type of Soundblaster to emulate. gb is Gameblaster.\n#          Possible values: sb1, sb2, sbpro1, sbpro2, sb16, gb, none.\n#  sbbase: The IO address of the soundblaster.\n#          Possible values: 220, 240, 260, 280, 2a0, 2c0, 2e0, 300.\n#     irq: The IRQ number of the soundblaster.\n#          Possible values: 7, 5, 3, 9, 10, 11, 12.\n#     dma: The DMA number of the soundblaster.\n#          Possible values: 1, 5, 0, 3, 6, 7.\n#    hdma: The High DMA number of the soundblaster.\n#          Possible values: 1, 5, 0, 3, 6, 7.\n# sbmixer: Allow the soundblaster mixer to modify the DOSBox mixer.\n# oplmode: Type of OPL emulation. On 'auto' the mode is determined by sblaster type. All OPL modes are Adlib-compatible, except for 'cms'.\n#          Possible values: auto, cms, opl2, dualopl2, opl3, none.\n#  oplemu: Provider for the OPL emulation. compat might provide better quality (see oplrate as well).\n#          Possible values: default, compat, fast.\n# oplrate: Sample rate of OPL music emulation. Use 49716 for highest quality (set the mixer rate accordingly).\n#          Possible values: 44100, 49716, 48000, 32000, 22050, 16000, 11025, 8000.\n\nsbtype=sb16\nsbbase=220\nirq=7\ndma=1\nhdma=5\nsbmixer=true\noplmode=auto\noplemu=default\noplrate=44100\n\n[gus]\n#      gus: Enable the Gravis Ultrasound emulation.\n#  gusrate: Sample rate of Ultrasound emulation.\n#           Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#  gusbase: The IO base address of the Gravis Ultrasound.\n#           Possible values: 240, 220, 260, 280, 2a0, 2c0, 2e0, 300.\n#   gusirq: The IRQ number of the Gravis Ultrasound.\n#           Possible values: 5, 3, 7, 9, 10, 11, 12.\n#   gusdma: The DMA channel of the Gravis Ultrasound.\n#           Possible values: 3, 0, 1, 5, 6, 7.\n# ultradir: Path to Ultrasound directory. In this directory\n#           there should be a MIDI directory that contains\n#           the patch files for GUS playback. Patch sets used\n#           with Timidity should work fine.\n\ngus=false\ngusrate=44100\ngusbase=240\ngusirq=5\ngusdma=3\nultradir=C:\\ULTRASND\n\n[speaker]\n# pcspeaker: Enable PC-Speaker emulation.\n#    pcrate: Sample rate of the PC-Speaker sound generation.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#     tandy: Enable Tandy Sound System emulation. For 'auto', emulation is present only if machine is set to 'tandy'.\n#            Possible values: auto, on, off.\n# tandyrate: Sample rate of the Tandy 3-Voice generation.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#    disney: Enable Disney Sound Source emulation. (Covox Voice Master and Speech Thing compatible).\n\npcspeaker=true\npcrate=44100\ntandy=auto\ntandyrate=44100\ndisney=true\n\n[joystick]\n# joysticktype: Type of joystick to emulate: auto (default), none,\n#               2axis (supports two joysticks),\n#               4axis (supports one joystick, first joystick used),\n#               4axis_2 (supports one joystick, second joystick used),\n#               fcs (Thrustmaster), ch (CH Flightstick).\n#               none disables joystick emulation.\n#               auto chooses emulation depending on real joystick(s).\n#               (Remember to reset dosbox's mapperfile if you saved it earlier)\n#               Possible values: auto, 2axis, 4axis, 4axis_2, fcs, ch, none.\n#        timed: enable timed intervals for axis. Experiment with this option, if your joystick drifts (away).\n#     autofire: continuously fires as long as you keep the button pressed.\n#       swap34: swap the 3rd and the 4th axis. can be useful for certain joysticks.\n#   buttonwrap: enable button wrapping at the number of emulated buttons.\n\njoysticktype=fcs\ntimed=true\nautofire=false\nswap34=false\nbuttonwrap=false\n\n[serial]\n# serial1: set type of device connected to com port.\n#          Can be disabled, dummy, modem, nullmodem, directserial.\n#          Additional parameters must be in the same line in the form of\n#          parameter:value. Parameter for all types is irq (optional).\n#          for directserial: realport (required), rxdelay (optional).\n#                           (realport:COM1 realport:ttyS0).\n#          for modem: listenport (optional).\n#          for nullmodem: server, rxdelay, txdelay, telnet, usedtr,\n#                         transparent, port, inhsocket (all optional).\n#          Example: serial1=modem listenport:5000\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial2: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial3: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial4: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n\nserial1=dummy\nserial2=dummy\nserial3=disabled\nserial4=disabled\n\n[dos]\n#            xms: Enable XMS support.\n#            ems: Enable EMS support.\n#            umb: Enable UMB support.\n# keyboardlayout: Language code of the keyboard layout (or none).\n\nxms=true\nems=true\numb=true\nkeyboardlayout=auto\n\n[ipx]\n# ipx: Enable ipx over UDP/IP emulation.\n\nipx=false\n\n[autoexec]\n# Lines in this section will be run at startup.\n# You can put your MOUNT lines here.\n\n@echo off\nMount C \"..\"\nC:\ncls\nDOOM.exe\n:exit\nexit\n</code></pre> <ul> <li>Most of the file is explained but to go into the nitty gritty of the [autoexec] it will mount the local location as C:, it changes to C: it will clear the screen and automatically run the DOOM.exe executable, and will exit the previous shell, meaning it will run the game by just clicking play.</li> <li>Zip up the folder and add it to RomM's DOS platform, then just simply click play. If you hit a blank screen it means that something is wrong with the auto exec, and will need manual troubleshooting.</li> </ul>"},{"location":"Platforms-and-Players/MS-DOS/#advanced-running-retail-games","title":"Advanced Running Retail Games","text":"<p>Info</p> <p>At the minute DOS games redesigned by GOG are NOT supported, this is due to how they mount and use the locations. I am looking into how I can figure this out but I have had a 100% failure rate from the GOG DOS Games.</p> <p>Retail games usually require to run alongside a disk even if the game has been \"installed\" locally. I will use Dungeon Keeper Gold as an example for a retail game with a disc and the configuration needed.</p> <ul> <li>Prepare the files like you did before, but this time with the disk images (<code>*.bin</code> &amp; <code>*.cue</code>) and move them to a folder named CD within the folder. Only within this folder you should all the .bin files and the \"matching\" .cue sheet (remember .cue is just a text document pulling all these files together, like a playlist)</li> <li>Have a look at the KEEPER.cfg file, this file will say how the game was installed and the path it expects the installed files to be at.</li> <li>Create a new .conf document named the same as the .exe for me that would be KEEPER.conf</li> </ul> KEEPER.conf Example <pre><code># This is the configurationfile for DOSBox 0.74. (Please use the latest version of DOSBox)\n# Lines starting with a # are commentlines and are ignored by DOSBox.\n# They are used to (briefly) document the effect of each option.\n\n[sdl]\n#       fullscreen: Start dosbox directly in fullscreen. (Press ALT-Enter to go back)\n#       fulldouble: Use double buffering in fullscreen. It can reduce screen flickering, but it can also result in a slow DOSBox.\n#   fullresolution: What resolution to use for fullscreen: original or fixed size (e.g. 1024x768).\n#                     Using your monitor's native resolution with aspect=true might give the best results.\n#                     If you end up with small window on a large screen, try an output different from surface.\n# windowresolution: Scale the window to this size IF the output device supports hardware scaling.\n#                     (output=surface does not!)\n#           output: What video system to use for output.\n#                   Possible values: surface, overlay, opengl, openglnb, ddraw.\n#         autolock: Mouse will automatically lock, if you click on the screen. (Press CTRL-F10 to unlock)\n#      sensitivity: Mouse sensitivity.\n#      waitonerror: Wait before closing the console if dosbox has an error.\n#         priority: Priority levels for dosbox. Second entry behind the comma is for when dosbox is not focused/minimized.\n#                     pause is only valid for the second entry.\n#                   Possible values: lowest, lower, normal, higher, highest, pause.\n#       mapperfile: File used to load/save the key/event mappings from. Resetmapper only works with the defaul value.\n#     usescancodes: Avoid usage of symkeys, might not work on all operating systems.\n\nfullscreen=TRUE\nfulldouble=false\nfullresolution=Fixed\nwindowresolution=1280x800\noutput=direct3d\nautolock=true\nsensitivity=100\nwaitonerror=true\npriority=higher,normal\nmapperfile=mapper-0.74.map\nusescancodes=true\n\n[dosbox]\n# language: Select another language file.\n#  machine: The type of machine tries to emulate.\n#           Possible values: hercules, cga, tandy, pcjr, ega, vgaonly, svga_s3, svga_et3000, svga_et4000, svga_paradise, vesa_nolfb, vesa_oldvbe.\n# captures: Directory where things like wave, midi, screenshot get captured.\n#  memsize: Amount of memory DOSBox has in megabytes.\n#             This value is best left at its default to avoid problems with some games,\n#             though few games might require a higher value.\n#             There is generally no speed advantage when raising this value.\n\nlanguage=\nmachine=svga_s3\ncaptures=.\\Captures\\\nmemsize=16\n\n[render]\n# frameskip: How many frames DOSBox skips before drawing one.\n#    aspect: Do aspect correction, if your output method doesn't support scaling this can slow things down!.\n#    scaler: Scaler used to enlarge/enhance low resolution modes.\n#              If 'forced' is appended, then the scaler will be used even if the result might not be desired.\n#            Possible values: none, normal2x, normal3x, advmame2x, advmame3x, advinterp2x, advinterp3x, hq2x, hq3x, 2xsai, super2xsai, supereagle, tv2x, tv3x, rgb2x, rgb3x, scan2x, scan3x.\n\nframeskip=0\naspect=false\nscaler=normal3x\n\n[cpu]\n#      core: CPU Core used in emulation. auto will switch to dynamic if available and appropriate.\n#            Possible values: auto, dynamic, normal, simple.\n#   cputype: CPU Type used in emulation. auto is the fastest choice.\n#            Possible values: auto, 386, 386_slow, 486_slow, pentium_slow, 386_prefetch.\n#    cycles: Amount of instructions DOSBox tries to emulate each millisecond.\n#            Setting this value too high results in sound dropouts and lags.\n#            Cycles can be set in 3 ways:\n#              'auto'          tries to guess what a game needs.\n#                              It usually works, but can fail for certain games.\n#              'fixed #number' will set a fixed amount of cycles. This is what you usually need if 'auto' fails.\n#                              (Example: fixed 4000).\n#              'max'           will allocate as much cycles as your computer is able to handle.\n#\n#            Possible values: auto, fixed, max.\n#   cycleup: Amount of cycles to decrease/increase with keycombo.(CTRL-F11/CTRL-F12)\n# cycledown: Setting it lower than 100 will be a percentage.\n\ncore=auto\ncputype=auto\ncycles=max\ncycleup=10\ncycledown=20\n\n[mixer]\n#   nosound: Enable silent mode, sound is still emulated though.\n#      rate: Mixer sample rate, setting any device's rate higher than this will probably lower their sound quality.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n# blocksize: Mixer block size, larger blocks might help sound stuttering but sound will also be more lagged.\n#            Possible values: 1024, 2048, 4096, 8192, 512, 256.\n# prebuffer: How many milliseconds of data to keep on top of the blocksize.\n\nnosound=false\nrate=22050\nblocksize=2048\nprebuffer=10\n\n[midi]\n#     mpu401: Type of MPU-401 to emulate.\n#             Possible values: intelligent, uart, none.\n# mididevice: Device that will receive the MIDI data from MPU-401.\n#             Possible values: default, win32, alsa, oss, coreaudio, coremidi, none.\n# midiconfig: Special configuration options for the device driver. This is usually the id of the device you want to use.\n#               See the README/Manual for more details.\n\nmpu401=intelligent\nmididevice=default\nmidiconfig=\n\n[sblaster]\n#  sbtype: Type of Soundblaster to emulate. gb is Gameblaster.\n#          Possible values: sb1, sb2, sbpro1, sbpro2, sb16, gb, none.\n#  sbbase: The IO address of the soundblaster.\n#          Possible values: 220, 240, 260, 280, 2a0, 2c0, 2e0, 300.\n#     irq: The IRQ number of the soundblaster.\n#          Possible values: 7, 5, 3, 9, 10, 11, 12.\n#     dma: The DMA number of the soundblaster.\n#          Possible values: 1, 5, 0, 3, 6, 7.\n#    hdma: The High DMA number of the soundblaster.\n#          Possible values: 1, 5, 0, 3, 6, 7.\n# sbmixer: Allow the soundblaster mixer to modify the DOSBox mixer.\n# oplmode: Type of OPL emulation. On 'auto' the mode is determined by sblaster type. All OPL modes are Adlib-compatible, except for 'cms'.\n#          Possible values: auto, cms, opl2, dualopl2, opl3, none.\n#  oplemu: Provider for the OPL emulation. compat might provide better quality (see oplrate as well).\n#          Possible values: default, compat, fast.\n# oplrate: Sample rate of OPL music emulation. Use 49716 for highest quality (set the mixer rate accordingly).\n#          Possible values: 44100, 49716, 48000, 32000, 22050, 16000, 11025, 8000.\n\nsbtype=sb16\nsbbase=220\nirq=7\ndma=1\nhdma=5\nsbmixer=true\noplmode=auto\noplemu=default\noplrate=44100\n\n[gus]\n#      gus: Enable the Gravis Ultrasound emulation.\n#  gusrate: Sample rate of Ultrasound emulation.\n#           Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#  gusbase: The IO base address of the Gravis Ultrasound.\n#           Possible values: 240, 220, 260, 280, 2a0, 2c0, 2e0, 300.\n#   gusirq: The IRQ number of the Gravis Ultrasound.\n#           Possible values: 5, 3, 7, 9, 10, 11, 12.\n#   gusdma: The DMA channel of the Gravis Ultrasound.\n#           Possible values: 3, 0, 1, 5, 6, 7.\n# ultradir: Path to Ultrasound directory. In this directory\n#           there should be a MIDI directory that contains\n#           the patch files for GUS playback. Patch sets used\n#           with Timidity should work fine.\n\ngus=false\ngusrate=44100\ngusbase=240\ngusirq=5\ngusdma=3\nultradir=C:\\ULTRASND\n\n[speaker]\n# pcspeaker: Enable PC-Speaker emulation.\n#    pcrate: Sample rate of the PC-Speaker sound generation.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#     tandy: Enable Tandy Sound System emulation. For 'auto', emulation is present only if machine is set to 'tandy'.\n#            Possible values: auto, on, off.\n# tandyrate: Sample rate of the Tandy 3-Voice generation.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#    disney: Enable Disney Sound Source emulation. (Covox Voice Master and Speech Thing compatible).\n\npcspeaker=true\npcrate=44100\ntandy=auto\ntandyrate=44100\ndisney=true\n\n[joystick]\n# joysticktype: Type of joystick to emulate: auto (default), none,\n#               2axis (supports two joysticks),\n#               4axis (supports one joystick, first joystick used),\n#               4axis_2 (supports one joystick, second joystick used),\n#               fcs (Thrustmaster), ch (CH Flightstick).\n#               none disables joystick emulation.\n#               auto chooses emulation depending on real joystick(s).\n#               (Remember to reset dosbox's mapperfile if you saved it earlier)\n#               Possible values: auto, 2axis, 4axis, 4axis_2, fcs, ch, none.\n#        timed: enable timed intervals for axis. Experiment with this option, if your joystick drifts (away).\n#     autofire: continuously fires as long as you keep the button pressed.\n#       swap34: swap the 3rd and the 4th axis. can be useful for certain joysticks.\n#   buttonwrap: enable button wrapping at the number of emulated buttons.\n\njoysticktype=fcs\ntimed=true\nautofire=false\nswap34=false\nbuttonwrap=false\n\n[serial]\n# serial1: set type of device connected to com port.\n#          Can be disabled, dummy, modem, nullmodem, directserial.\n#          Additional parameters must be in the same line in the form of\n#          parameter:value. Parameter for all types is irq (optional).\n#          for directserial: realport (required), rxdelay (optional).\n#                           (realport:COM1 realport:ttyS0).\n#          for modem: listenport (optional).\n#          for nullmodem: server, rxdelay, txdelay, telnet, usedtr,\n#                         transparent, port, inhsocket (all optional).\n#          Example: serial1=modem listenport:5000\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial2: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial3: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial4: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n\nserial1=dummy\nserial2=dummy\nserial3=disabled\nserial4=disabled\n\n[dos]\n#            xms: Enable XMS support.\n#            ems: Enable EMS support.\n#            umb: Enable UMB support.\n# keyboardlayout: Language code of the keyboard layout (or none).\n\nxms=true\nems=true\numb=true\nkeyboardlayout=auto\n\n[ipx]\n# ipx: Enable ipx over UDP/IP emulation.\n\nipx=false\n\n[autoexec]\n# Lines in this section will be run at startup.\n# You can put your MOUNT lines here.\n\n@echo off\nMount C \"..\"\nC:\ncd CD\nimgmount d DUNGEO~8.CUE -t iso -fs iso\ncd ..\ncls\nKEEPER.exe\n:exit\nexit\n</code></pre> <ul> <li>Notice the different in the automount commands<ul> <li>Mount the games files to can</li> <li>Change to C:</li> <li>Change Directory to CD</li> <li>Using dosbox imgmount, mount the CD to the D path</li> <li>cd to the directory above where the .exe</li> <li>Clear the working out</li> <li>Run KEEPER.exe</li> </ul> </li> <li>Once this is done, the game will run. Zip the files up and add to your RomM and give it a test.</li> </ul>"},{"location":"Platforms-and-Players/MS-DOS/#advanced-game-troubleshooting","title":"Advanced Game Troubleshooting","text":"<p>If the games are not working and you go back to a blank dos looking screen, this will require some manual troubleshooting but I have found success with the following methods:</p> <ul> <li>Remove the .exe in the .CONF file and investigate the automounts<ul> <li>This means going to the C: and make sure the .exe is in the right place.</li> <li>Use the following command <code>type DEFAULT.cfg</code> to see the installation location, this is where the game is looking for the files, this should be set to a D: location.</li> <li>Browse to that location and see if the files are there and they are readable.</li> </ul> </li> <li>The automount is simply following instructions, so it expects the files to be where you say, following this method is usually best to troubleshoot.</li> </ul> <p>Another way of troubleshooting is to use Retroarch and the core \"dosbox-pure\" because if it runs in here, it will run in RomM. Simply give it your ZIP and it will act the same as if you was doing it through RomM, once the .conf file is perfected add it back to the ZIP.</p>"},{"location":"Platforms-and-Players/RuffleRS-Player/","title":"RuffleRS","text":"<p>Ruffle is a web-based player for flash games. With flash now discontinued, this is the best way to play your flash collection in the browser.</p> <p>Important</p> <p>Ruffle will only play games stored in platform folders called <code>flash</code> or <code>browser</code>.</p>"},{"location":"Platforms-and-Players/Supported-Platforms/","title":"Supported Platforms","text":"<p>Below is a list of all supported platforms/systems/consoles and their respective folder names. Supported platforms means RomM can fetch metadata from sources for those platforms.</p> <p>Info</p> <p>For platforms that can be playable in the browser, please check EmulatorJS supported platforms and RuffleRS player.</p> <p>Danger</p> <p>The folder name is case-sensitive and must be used exactly as it appears in the list below.</p> <p>Filter providers</p> 0 of 0 platforms shown          Platform Name Folder Name Metadata Providers 1292 Advanced Programmable Video System <code>1292-advanced-programmable-video-system</code> 3DO Interactive Multiplayer <code>3do</code> 8-Bit Productions Commander X16 <code>commander-x16</code> Aamber Pegasus <code>pegasus</code> ABC 80 <code>abc-80</code> Acorn Archimedes <code>acorn-archimedes</code> Acorn Electron <code>acorn-electron</code> Advanced Pico Beena <code>advanced-pico-beena</code> Adventure Vision <code>adventure-vision</code> AirConsole <code>airconsole</code> Alice 32/90 <code>alice-3290</code> Altair 680 <code>altair-680</code> Altair 8800 <code>altair-8800</code> Amazon Alexa <code>amazon-alexa</code> Amazon Fire TV <code>amazon-fire-tv</code> Amiga <code>amiga</code> Amiga CD <code>amiga-cd</code> Amiga CD32 <code>amiga-cd32</code> Amstrad CPC <code>acpc</code> Amstrad GX4000 <code>amstrad-gx4000</code> Amstrad PCW <code>amstrad-pcw</code> Analogue electronics <code>analogueelectronics</code> Android <code>android</code> Antstream <code>antstream</code> APF MP1000/Imagination Machine <code>apf</code> Apogee BK-01 <code>bk-01</code> Apple I <code>apple</code> Apple II <code>appleii</code> Apple IIGS <code>apple-iigs</code> Apple III <code>appleiii</code> Apple Lisa <code>apple-lisa</code> Apple Pippin <code>apple-pippin</code> Arcade <code>arcade</code> Arcadia 2001 <code>arcadia-2001</code> Arduboy <code>arduboy</code> Astral 2000 <code>astral-2000</code> Atari 2600 <code>atari2600</code> Atari 5200 <code>atari5200</code> Atari 7800 <code>atari7800</code> Atari 8-bit <code>atari8bit</code> Atari 800 <code>atari800</code> Atari Jaguar <code>jaguar</code> Atari Jaguar CD <code>atari-jaguar-cd</code> Atari Lynx <code>lynx</code> Atari ST/STE <code>atari-st</code> Atari VCS <code>atari-vcs</code> Atari XEGS <code>atari-xegs</code> Atom <code>atom</code> AY-3-8500 <code>ay-3-8500</code> AY-3-8603 <code>ay-3-8603</code> AY-3-8605 <code>ay-3-8605</code> AY-3-8606 <code>ay-3-8606</code> AY-3-8607 <code>ay-3-8607</code> AY-3-8610 <code>ay-3-8610</code> AY-3-8710 <code>ay-3-8710</code> AY-3-8760 <code>ay-3-8760</code> Bada <code>bada</code> Bally Astrocade <code>astrocade</code> BBC Microcomputer System <code>bbcmicro</code> Benesse Pocket Challenge V2 <code>pocket-challenge-v2</code> Benesse Pocket Challenge W <code>pocket-challenge-w</code> BeOS <code>beos</code> BGR Computers Excalibur 64 <code>excalibur-64</code> Bit Corporation BIT 90 <code>bit-90</code> Black Point <code>black-point</code> BlackBerry OS <code>blackberry</code> Blacknut <code>blacknut</code> Blu-ray Player <code>blu-ray-player</code> BREW <code>brew</code> Browser (Flash/HTML5) <code>browser</code> Bubble <code>bubble</code> Call-A-Computer time-shared mainframe computer system <code>call-a-computer</code> Cambridge Computer Z88 <code>z88</code> Camputers Lynx <code>camputers-lynx</code> Casio CFX-9850 <code>casio-cfx-9850</code> Casio FP-1000 &amp; FP-1100 <code>casio-fp-1000</code> Casio Loopy <code>casio-loopy</code> Casio PB-1000 <code>casio-pb-1000</code> Casio Programmable Calculator <code>casio-programmable-calculator</code> Casio PV-1000 <code>casio-pv-1000</code> Casio PV-2000 <code>casio-pv-2000</code> CDC Cyber 70 <code>cdccyber70</code> Champion 2711 <code>champion-2711</code> ClickStart <code>clickstart</code> Coleco Adam <code>colecoadam</code> ColecoVision <code>colecovision</code> Colour Genie <code>colour-genie</code> Commodore 128 <code>c128</code> Commodore 16 <code>c16</code> Commodore C64/128/MAX <code>c64</code> Commodore CDTV <code>commodore-cdtv</code> Commodore PET <code>cpet</code> Commodore Plus/4 <code>c-plus-4</code> Commodore VIC-20 <code>vic-20</code> Compal 80 <code>compal-80</code> Compucolor I <code>compucolor-i</code> Compucolor II <code>compucolor-ii</code> Compucorp Programmable Calculator <code>compucorp-programmable-calculator</code> COSMAC <code>fred-cosmac</code> CP/M <code>cpm</code> CreatiVision <code>creativision</code> Cybervision <code>cybervision</code> Danger OS <code>danger-os</code> Daydream <code>daydream</code> DEC GT40 <code>gt40</code> Dedicated console <code>dedicated-console</code> Dedicated handheld <code>dedicated-handheld</code> Didj <code>didj</code> Digiblast <code>digiblast</code> DoJa <code>doja</code> Donner Model 30 <code>donner30</code> DOS <code>dos</code> Dragon 32/64 <code>dragon-32-slash-64</code> Dreamcast <code>dc</code> DVD Player <code>dvd-player</code> e-Reader / Card-e Reader <code>e-reader-slash-card-e-reader</code> ECD Micromind <code>ecd-micromind</code> EDSAC <code>edsac</code> Elektor TV Games Computer <code>elektor</code> Elektronika BK <code>bk</code> Enterprise <code>enterprise</code> Epoch Cassette Vision <code>epoch-cassette-vision</code> Epoch Game Pocket Computer <code>epoch-game-pocket-computer</code> Epoch Super Cassette Vision <code>epoch-super-cassette-vision</code> Evercade <code>evercade</code> Exelvision <code>exelvision</code> ExEn <code>exen</code> Exidy Sorcerer <code>exidy-sorcerer</code> Fairchild Channel F <code>fairchild-channel-f</code> Family Computer <code>famicom</code> Family Computer Disk System <code>fds</code> Feature phone <code>mobile-custom</code> Ferranti Nimrod Computer <code>nimrod</code> FM Towns <code>fm-towns</code> FM-7 <code>fm-7</code> Freebox <code>freebox</code> G-cluster <code>g-cluster</code> Galaksija <code>galaksija</code> Gamate <code>gamate</code> Game &amp; Watch <code>g-and-w</code> Game Boy <code>gb</code> Game Boy Advance <code>gba</code> Game Boy Color <code>gbc</code> Game Master <code>hartung</code> Game Wave <code>game-wave</code> Game.com <code>game-dot-com</code> GameStick <code>gamestick</code> Gear VR <code>gear-vr</code> GIMINI <code>gimini</code> Gizmondo <code>gizmondo</code> Gloud <code>gloud</code> Glulx <code>glulx</code> GNEX <code>gnex</code> Google Stadia <code>stadia</code> GP2X <code>gp2x</code> GP2X Wiz <code>gp2x-wiz</code> GP32 <code>gp32</code> GVM <code>gvm</code> Handheld Electronic LCD <code>handheld-electronic-lcd</code> HD DVD Player <code>hd-dvd-player</code> Heath/Zenith H8/H89 <code>heathzenith</code> Heathkit H11 <code>heathkit-h11</code> Hector HRX <code>hrx</code> Hitachi S1 <code>hitachi-s1</code> HP 2100 <code>hp2100</code> HP 3000 <code>hp3000</code> HP 9800 <code>hp-9800</code> HP Programmable Calculator <code>hp-programmable-calculator</code> Hugo <code>hugo</code> Hyper Neo Geo 64 <code>hyper-neo-geo-64</code> HyperScan <code>hyperscan</code> IBM 5100 <code>ibm-5100</code> IBM PCjr <code>pc-jr</code> Ideal-Computer <code>ideal-computer</code> iiRcade <code>iircade</code> Imlac PDS-1 <code>imlac-pds1</code> Intel 8008 <code>intel-8008</code> Intel 8080 <code>intel-8080</code> Intel 8086 / 8088 <code>intel-8086</code> Intellivision <code>intellivision</code> Intellivision Amico <code>intellivision-amico</code> Interact Model One <code>interact-model-one</code> Interton VC 4000 <code>interton-vc-4000</code> Interton Video 2000 <code>interton-video-2000</code> iOS <code>ios</code> iPad <code>ipad</code> iPod Classic <code>ipod-classic</code> J2ME <code>j2me</code> Jolt <code>jolt</code> Jupiter Ace <code>jupiter-ace</code> KaiOS <code>kaios</code> KIM-1 <code>kim-1</code> Kindle Classic <code>kindle</code> Laser 200 <code>laser200</code> LaserActive <code>laseractive</code> LeapFrog Explorer <code>leapfrog-explorer</code> Leapster <code>leapster</code> Leapster Explorer/LeadPad Explorer <code>leapster-explorer-slash-leadpad-explorer</code> LeapTV <code>leaptv</code> Legacy Computer <code>legacy-computer</code> Legacy Mobile Device <code>mobile</code> Linux <code>linux</code> Luna <code>luna</code> Mac <code>mac</code> Maemo <code>maemo</code> Magnavox Odyssey <code>odyssey</code> Mainframe <code>mainframe</code> Matsushita/Panasonic JR <code>matsushitapanasonic-jr</code> Mattel Aquarius <code>aquarius</code> MeeGo <code>meego</code> Mega Duck/Cougar Boy <code>mega-duck-slash-cougar-boy</code> Memotech MTX <code>memotech-mtx</code> Memotech MTX512 <code>mtx512</code> Meritum <code>meritum</code> Meta Quest 2 <code>meta-quest-2</code> Meta Quest 3 <code>meta-quest-3</code> Microbee <code>microbee</code> Microcomputer <code>microcomputer</code> Microsoft MSX2+ <code>msx2plus</code> Microtan 65 <code>microtan-65</code> Microvision <code>microvision</code> Mophun <code>mophun</code> MOS Technology 6502 <code>mos-technology-6502</code> Motorola 6800 <code>motorola-6800</code> Motorola 68k <code>motorola-68k</code> MRE <code>mre</code> MSX <code>msx</code> MSX Turbo R <code>msx-turbo</code> MSX2 <code>msx2</code> MUGEN <code>mugen</code> N-Gage <code>ngage</code> N-Gage (service) <code>ngage2</code> Namco System 22 <code>system-32</code> Nascom <code>nascom</code> NEC PC-6000 Series <code>nec-pc-6000-series</code> Neo Geo AES <code>neogeoaes</code> Neo Geo CD <code>neo-geo-cd</code> Neo Geo MVS <code>neogeomvs</code> Neo Geo Pocket <code>neo-geo-pocket</code> Neo Geo Pocket Color <code>neo-geo-pocket-color</code> Neo Geo X <code>neo-geo-x</code> New Nintendo 3DS <code>new-nintendo-3ds</code> NewBrain <code>newbrain</code> Newton <code>newton</code> Nintendo 3DS <code>3ds</code> Nintendo 64 <code>n64</code> Nintendo 64DD <code>64dd</code> Nintendo DS <code>nds</code> Nintendo DSi <code>nintendo-dsi</code> Nintendo Entertainment System <code>nes</code> Nintendo GameCube <code>ngc</code> Nintendo Switch <code>switch</code> Nintendo Switch 2 <code>switch-2</code> North Star <code>northstar</code> Noval 760 <code>noval-760</code> Nuon <code>nuon</code> Oculus Go <code>oculus-go</code> Oculus Quest <code>oculus-quest</code> Oculus Rift <code>oculus-rift</code> Oculus VR <code>oculus-vr</code> Odyssey 2 <code>odyssey-2</code> Odyssey 2 / Videopac G7000 <code>odyssey-2-slash-videopac-g7000</code> Ohio Scientific <code>ohio-scientific</code> OnLive Game System <code>onlive-game-system</code> OOParts <code>ooparts</code> OpenBOR <code>openbor</code> Orao <code>orao</code> Oric <code>oric</code> Oric Atmos <code>atmos</code> OS/2 <code>os2</code> Othello Multivision <code>multivision</code> Ouya <code>ouya</code> Palm OS <code>palm-os</code> Palmtex <code>palmtex</code> Panasonic Jungle <code>panasonic-jungle</code> Panasonic M2 <code>panasonic-m2</code> Pandora <code>pandora</code> PC Booter <code>pc-booter</code> PC Engine SuperGrafx <code>supergrafx</code> PC-50X Family <code>pc-50x-family</code> PC-6001 <code>pc-6001</code> PC-8000 <code>pc-8000</code> PC-8800 Series <code>pc-8800-series</code> PC-9800 Series <code>pc-9800-series</code> PC-FX <code>pc-fx</code> PDP-1 <code>pdp1</code> PDP-10 <code>pdp10</code> PDP-11 <code>pdp11</code> PDP-7 <code>pdp-7</code> PDP-8 <code>pdp-8</code> Pebble <code>pebble</code> Philips CD-i <code>philips-cd-i</code> Philips VG 5000 <code>philips-vg-5000</code> Photo CD <code>photocd</code> PICO <code>pico</code> Pinball <code>pinball</code> Pippin <code>pippin</code> PLATO <code>plato</code> Playdate <code>playdate</code> Playdia <code>playdia</code> PlayStation <code>psx</code> PlayStation 2 <code>ps2</code> PlayStation 3 <code>ps3</code> PlayStation 4 <code>ps4</code> PlayStation 5 <code>ps5</code> PlayStation Now <code>playstation-now</code> PlayStation Portable <code>psp</code> PlayStation Vita <code>psvita</code> PlayStation VR <code>psvr</code> PlayStation VR2 <code>psvr2</code> Plex Arcade <code>plex-arcade</code> Plug &amp; Play <code>plug-and-play</code> PocketStation <code>pocketstation</code> Pokitto <code>pokitto</code> Pok\u00e9mon mini <code>pokemon-mini</code> Poly-88 <code>poly-88</code> Polymega <code>polymega</code> R-Zone <code>r-zone</code> RCA Studio II <code>rca-studio-ii</code> Research Machines 380Z <code>research-machines-380z</code> Roku <code>roku</code> SAM Coup\u00e9 <code>sam-coupe</code> Satellaview <code>satellaview</code> SC/MP <code>scmp</code> ScummVM <code>scummvm</code> SD-200/270/290 <code>sd-200270290</code> SDS Sigma 7 <code>sdssigma7</code> Sega 32X <code>sega32</code> Sega Advanced Pico Beena <code>beena</code> Sega CD <code>segacd</code> Sega CD 32X <code>segacd32</code> Sega Dreamcast VMU <code>vmu</code> Sega Game Gear <code>gamegear</code> Sega Hikaru <code>hikaru</code> Sega Master System/Mark III <code>sms</code> Sega Mega Drive/Genesis <code>genesis</code> Sega Model 1 <code>model1</code> Sega Model 2 <code>model2</code> Sega Model 3 <code>model3</code> Sega Pico <code>sega-pico</code> Sega Saturn <code>saturn</code> Sega SC-3000 <code>sc3000</code> Sega ST-V <code>stv</code> Sega System 16 <code>system16</code> Sega System 32 <code>system32</code> SG-1000 <code>sg1000</code> Sharp MZ-2200 <code>sharp-mz-2200</code> Sharp MZ-80B/2000/2500 <code>sharp-mz-80b20002500</code> Sharp MZ-80K/700/800/1500 <code>sharp-mz-80k7008001500</code> Sharp X1 <code>x1</code> Sharp X68000 <code>sharp-x68000</code> Sharp Zaurus <code>sharp-zaurus</code> Signetics 2650 <code>signetics-2650</code> Sinclair QL <code>sinclair-ql</code> Sinclair ZX81 <code>zx81</code> SK-VM <code>sk-vm</code> SMC-777 <code>smc-777</code> Socrates <code>socrates</code> Sol-20 <code>sol-20</code> Sony PSP Minis <code>psp-minis</code> Sord M5 <code>sord-m5</code> Spectravideo <code>spectravideo</code> SRI-500/1000 <code>sri-5001000</code> SteamVR <code>steam-vr</code> Sufami Turbo <code>sufami-turbo</code> Super A'Can <code>super-acan</code> Super Famicom <code>sfam</code> Super NES CD-ROM System <code>super-nes-cd-rom-system</code> Super Nintendo Entertainment System <code>snes</code> Super Vision 8000 <code>super-vision-8000</code> Sure Shot HD <code>sure-shot-hd</code> SwanCrystal <code>swancrystal</code> SWTPC 6800 <code>swtpc-6800</code> Symbian <code>symbian</code> TADS <code>tads</code> Taito Type X <code>type-x</code> Taito X-55 <code>taito-x-55</code> Tandy Vis <code>tandy-vis</code> Tapwave Zodiac <code>zod</code> Tatung Einstein <code>tatung-einstein</code> Tektronix 4050 <code>tektronix-4050</code> Tele-Spiel ES-2201 <code>tele-spiel</code> Telstar Arcade <code>telstar-arcade</code> Terebikko / See 'n Say Video Phone <code>terebikko-slash-see-n-say-video-phone</code> Terminal <code>terminal</code> Texas Instruments TI-82 <code>ti-82</code> Texas Instruments TI-83 <code>ti-83</code> Texas Instruments TI-99 <code>ti-99</code> Thomson MO5 <code>thomson-mo5</code> Thomson TO <code>thomson-to</code> TI Programmable Calculator <code>ti-programmable-calculator</code> TI-99/4A <code>ti-994a</code> Tiki 100 <code>tiki-100</code> TIM <code>tim</code> Timex Sinclair 2068 <code>timex-sinclair-2068</code> Tizen <code>tizen</code> Tomahawk F1 <code>tomahawk-f1</code> Tomy Tutor <code>tomy-tutor</code> Tomy Tutor / Pyuta / Grandstand Tutor <code>tomy-tutor-slash-pyuta-slash-grandstand-tutor</code> Triton <code>triton</code> TRS-80 <code>trs-80</code> TRS-80 Color Computer <code>trs-80-color-computer</code> TRS-80 MC-10 <code>trs-80-mc-10</code> TRS-80 Model 100 <code>trs-80-model-100</code> TurboGrafx-16/PC Engine <code>tg16</code> Turbografx-16/PC Engine CD <code>turbografx-cd</code> tvOS <code>tvos</code> Uzebox <code>uzebox</code> V.Flash <code>vflash</code> V.Smile <code>vsmile</code> VC 4000 <code>vc-4000</code> Vector-06C <code>06c</code> Vectrex <code>vectrex</code> Versatile <code>versatile</code> VideoBrain <code>videobrain</code> Videopac+ G7400 <code>videopac-g7400</code> Virtual Boy <code>virtualboy</code> Virtual Console <code>vc</code> VIS <code>vis</code> visionOS <code>visionos</code> Visual Memory Unit / Visual Memory System <code>visual-memory-unit-slash-visual-memory-system</code> Wang 2200 <code>wang2200</code> WASM-4 <code>wasm-4</code> Watara/QuickShot Supervision <code>supervision</code> watchOS <code>watchos</code> webOS <code>webos</code> Wii <code>wii</code> Wii U <code>wiiu</code> Windows <code>win</code> Windows 3.x <code>win3x</code> Windows Apps <code>windows-apps</code> Windows Mixed Reality <code>windows-mixed-reality</code> Windows Mobile <code>windows-mobile</code> Windows Phone <code>winphone</code> WIPI <code>wipi</code> WonderSwan <code>wonderswan</code> WonderSwan Color <code>wonderswan-color</code> WoW Action Max <code>action-max</code> XaviXPORT <code>xavixport</code> Xbox <code>xbox</code> Xbox 360 <code>xbox360</code> Xbox Cloud Gaming <code>xboxcloudgaming</code> Xbox One <code>xboxone</code> Xbox Series X S <code>series-x-s</code> Xerox Alto <code>xerox-alto</code> Z-machine <code>z-machine</code> Zeebo <code>zeebo</code> Zilog Z80 <code>z80</code> Zilog Z8000 <code>zilog-z8000</code> ZiNc <code>zinc</code> Zodiac <code>zodiac</code> Zune <code>zune</code> ZX Spectrum <code>zxs</code> ZX Spectrum Next <code>zx-spectrum-next</code> ZX80 <code>zx80</code>"},{"location":"System-Setup/Synology-Setup-Guide/","title":"Synology Setup","text":""},{"location":"System-Setup/Synology-Setup-Guide/#external-written-guides","title":"External Written Guides","text":"<p>While you can follow the below guide, Marius Bogdan Lixandru has written excellent guides which focus on Synology infrastructure and with support for both MariaDB and PostGresSQL:</p> <ul> <li>How to Install RomM on Your Synology NAS (MariaDB)</li> <li>How to Install RomM With PostgreSQL on Your Synology NAS</li> </ul> <p>We suggest following the above guides if they fit your setup, and the guide below is available for all other use cases.</p>"},{"location":"System-Setup/Synology-Setup-Guide/#prerequisites","title":"Prerequisites","text":"<p>This guide assumes you're familiar with Docker and have basic knowledge of server management. You'll need:</p> <ul> <li>A Synology NAS or similar server</li> <li>Docker installed</li> <li>Basic command line knowledge</li> <li>Access to manage network settings</li> </ul>"},{"location":"System-Setup/Synology-Setup-Guide/#setup-process","title":"Setup Process","text":""},{"location":"System-Setup/Synology-Setup-Guide/#1-folder-structure-setup","title":"1. Folder Structure Setup","text":""},{"location":"System-Setup/Synology-Setup-Guide/#rom-storage-folders","title":"ROM Storage Folders","text":"<p>Create the following directory structure for game assets and configuration:</p> <pre><code>mkdir -p /volume1/data/media/games/assets\nmkdir -p /volume1/data/media/games/config\n</code></pre>"},{"location":"System-Setup/Synology-Setup-Guide/#rom-library-structure","title":"ROM Library Structure","text":"<p>RomM requires a very specific folder structure for rom files:</p> <pre><code>mkdir -p /volume1/data/media/games/library/roms\nmkdir -p /volume1/data/media/games/library/bios\n</code></pre> <p>Note: For supported platforms and their specific folder names, refer to the official RomM docs.</p>"},{"location":"System-Setup/Synology-Setup-Guide/#docker-data-folders","title":"Docker Data Folders","text":"<p>Create these folders for project and container data:</p> <pre><code>mkdir -p /volume1/docker/romm-project/\nmkdir -p /volume1/docker/romm/resources\nmkdir -p /volume1/docker/romm/redis-data\nmkdir -p /volume1/docker/mariadb-romm\n</code></pre>"},{"location":"System-Setup/Synology-Setup-Guide/#2-network-bridge-setup","title":"2. Network Bridge Setup","text":"<p>Create a new network bridge named <code>rommbridge</code> following standard Docker networking practices. You can use this guide for reference.</p>"},{"location":"System-Setup/Synology-Setup-Guide/#3-key-generation","title":"3. Key Generation","text":""},{"location":"System-Setup/Synology-Setup-Guide/#authentication-key","title":"Authentication Key","text":"<p>Generate your authentication key using:</p> <pre><code>openssl rand -hex 32\n&gt; 03a054b6ca27e0107c5eed552ea66bacd9f3a2a8a91e7595cd462a593f9ecd09\n</code></pre> <p>Save the output - you'll need it for the <code>ROMM_AUTH_SECRET_KEY</code> in your configuration.</p>"},{"location":"System-Setup/Synology-Setup-Guide/#api-integration-setup","title":"API Integration Setup","text":"<p>Follow the dedicated docs page for API key generation to set up your API keys.</p>"},{"location":"System-Setup/Synology-Setup-Guide/#4-mariadb-configuration","title":"4. MariaDB Configuration","text":"<p>Important</p> <ul> <li>This guide uses a dedicated MariaDB container for RomM, but you can use an existing MariaDB instance if preferred</li> <li>We're using MariaDB version 10.7 for compatibility</li> <li>The container uses port 3306 internally, mapped to 3309 externally</li> <li>A simplified health check is implemented for stability</li> </ul>"},{"location":"System-Setup/Synology-Setup-Guide/#5-docker-compose-configuration","title":"5. Docker Compose Configuration","text":"<p>Create a <code>docker-compose.yml</code> file with the following content:</p> Example Docker Compose <pre><code>version: \"3\"\n\nvolumes:\n    mysql_data:\n\nservices:\n    romm:\n        image: rommapp/romm:latest\n        container_name: romm\n        restart: unless-stopped\n        environment:\n            - DB_HOST=romm-db\n            - DB_NAME=romm # Should match MARIADB_DATABASE in mariadb\n            - DB_USER=romm-user # Should match MARIADB_USER in mariadb\n            - DB_PASSWD= # Should match MARIADB_PASSWORD in mariadb\n            - ROMM_AUTH_SECRET_KEY= # Generate a key with `openssl rand -hex 32`\n            - SCREENSCRAPER_USER= # These are the recommended metadata providers\n            - SCREENSCRAPER_PASSWORD= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#screenscraper\n            - RETROACHIEVEMENTS_API_KEY= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#retroachievements\n            - STEAMGRIDDB_API_KEY= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#steamgriddb\n            - HASHEOUS_API_ENABLED=true # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#hasheous\n        volumes:\n            - /volume1/docker/romm/resources:/romm/resources\n            - /volume1/docker/romm/redis-data:/redis-data\n            - /volume1/data/media/games/library:/romm/library\n            - /volume1/data/media/games/assets:/romm/assets\n            - /volume1/data/media/games/config:/romm/config\n        ports:\n            - 7676:8080\n        network_mode: rommbridge\n        depends_on:\n            romm-db:\n                condition: service_healthy\n                restart: true\n\n    romm-db:\n        image: mariadb:latest\n        container_name: romm-db\n        restart: unless-stopped\n        environment:\n            - MARIADB_ROOT_PASSWORD= # Use a unique, secure password\n            - MARIADB_DATABASE=romm\n            - MARIADB_USER=romm-user\n            - MARIADB_PASSWORD=\n        ports:\n            - 3309:3306\n        network_mode: rommbridge\n        volumes:\n            - /volume1/docker/mariadb-romm:/var/lib/mysql\n        healthcheck:\n            test: [CMD, healthcheck.sh, --connect, --innodb_initialized]\n            start_period: 30s\n            start_interval: 10s\n            interval: 10s\n            timeout: 5s\n            retries: 5\n</code></pre>"},{"location":"System-Setup/Synology-Setup-Guide/#6-initial-launch","title":"6. Initial Launch","text":"<ol> <li>Start the containers using Docker Compose</li> <li>Be patient! The container can take a few minutes to setup on first launch</li> <li>Monitor progress through container logs</li> <li>Access RomM through your browser at <code>http://your-server-ip:7676</code></li> </ol> <p>Important</p> <ul> <li>Replace placeholder values (UIDs, GIDs, passwords, API keys) with your own</li> <li>Ensure proper permissions on all created directories</li> <li>Back up your configuration after successful setup</li> <li>Monitor logs during initial startup for any errors</li> </ul>"},{"location":"System-Setup/Synology-Setup-Guide/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>If the web interface shows \"page not found,\" wait for initial setup to complete</li> <li>For database connection issues, verify MariaDB container health status</li> <li>Check logs for both containers if experiencing issues</li> <li>Ensure all volumes are properly mounted with correct permissions</li> </ul>"},{"location":"System-Setup/Synology-Setup-Guide/#contributing","title":"Contributing","text":"<p>This guide is an abridged version of ChopFoo's original guide. If you have any suggestions or improvements, please submit a pull request to the RomM docs.</p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/","title":"TrueNAS Setup","text":""},{"location":"System-Setup/TrueNAS-Setup-Guide/#prerequisites","title":"Prerequisites","text":"<p>This guide assumes you're familiar with Docker and have basic knowledge of TrueNAS. You'll need:</p> <ul> <li>A running TrueNAS installation</li> <li>Your games setup in the required folder structure</li> </ul>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#setup-process","title":"Setup Process","text":""},{"location":"System-Setup/TrueNAS-Setup-Guide/#install-through-the-truenas-app-catalog-recommended","title":"Install through the TrueNAS App Catalog (Recommended)","text":""},{"location":"System-Setup/TrueNAS-Setup-Guide/#step-1-navigate-to-romm-app","title":"Step 1: Navigate to RomM app","text":"<p>Navigate to the App Catalog via Apps (Left navigation bar) -&gt; Discover Apps -&gt; RomM -&gt; Install</p> <p></p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#step-2-installation-configuration","title":"Step 2: Installation configuration","text":"<p>Step through the installation UI. You will need to supply various credentials per the Quick Start Guide. Most of the default values will work.</p> <p>Note: You will likely want to set certain Storage Configurations to a Dataset within TrueNAS, such as your RomM Library and Assets storage. If you do this, ensure you provide ACL access to the UserID specified above (default: 568, apps user).</p> <p></p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#step-3-save-your-configuration","title":"Step 3: Save your configuration","text":"<p>Save, and you're done! If the app will not boot, refer to Troubleshooting or head on over to the Discord.</p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#install-via-yaml","title":"Install via YAML","text":"<p>This installation path should only be used in the event that there is a bug with installing through the App Catalog, or you wish to have more flexibility than is provided by the installation UI.</p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#step-1-navigate-to-yaml-install","title":"Step 1: Navigate to YAML install","text":"<p>Navigate to the <code>Install via YAML</code> page via Apps (Left navigation bar) -&gt; Discover Apps -&gt; Install via YAML</p> <p></p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#step-2-paste-in-the-following-yml","title":"Step 2: Paste in the following YML","text":"<p>Replace any empty values with credentials you've created per the Quick Start Guide.</p> Example Docker Compose <pre><code>version: \"3\"\n\nvolumes:\n    mysql_data:\n    romm_redis_data:\n\nservices:\n    romm:\n        image: rommapp/romm:latest\n        container_name: romm\n        restart: unless-stopped\n        user: 568:568\n        environment:\n            - DB_HOST=romm-db\n            - DB_NAME=romm # Should match MARIADB_DATABASE in mariadb\n            - DB_USER=romm-user # Should match MARIADB_USER in mariadb\n            - DB_PASSWD= # Should match MARIADB_PASSWORD in mariadb\n            - ROMM_AUTH_SECRET_KEY= # Generate a key with `openssl rand -hex 32`\n            - SCREENSCRAPER_USER= # These are the recommended metadata providers\n            - SCREENSCRAPER_PASSWORD= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#screenscraper\n            - RETROACHIEVEMENTS_API_KEY= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#retroachievements\n            - STEAMGRIDDB_API_KEY= # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#steamgriddb\n            - HASHEOUS_API_ENABLED=true # https://docs.romm.app/latest/Getting-Started/Metadata-Providers/#hasheous\n        volumes: # Any /mnt paths may optionally be replaced with a docker volume\n            - /mnt/tank/truenas/resources:/romm/resources # Replace /mnt...: file path with your own data structure\n            - romm_redis_data:/romm/redis-data # Docker will manage this volume\n            - /mnt/tank/truenas/roms:/romm/library # Replace /mnt...: file path with your own data structure\n            - /mnt/tank/truenas/assets:/romm/assets # Replace /mnt...: file path with your own data structure\n            - /mnt/tank/truenas/config:/romm/config # Replace /mnt...: file path with your own data structure\n        ports:\n            - 31100:8080\n        depends_on:\n            romm-db:\n                condition: service_healthy\n                restart: true\n        deploy:\n            resources:\n                limits:\n                    cpus: \"2.0\"\n                    memory: 4g\n\n    romm-db:\n        image: mariadb:latest\n        container_name: romm-db\n        restart: unless-stopped\n        environment:\n            - MARIADB_ROOT_PASSWORD= # Use a unique, secure password\n            - MARIADB_DATABASE=romm\n            - MARIADB_USER=romm-user\n            - MARIADB_PASSWORD=\n        volumes:\n            - mysql_data:/var/lib/mysql\n        healthcheck:\n            test: [CMD, healthcheck.sh, --connect, --innodb_initialized]\n            start_period: 30s\n            start_interval: 10s\n            interval: 10s\n            timeout: 5s\n            retries: 5\n</code></pre>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#step-3-save-the-configuration","title":"Step 3: Save the configuration","text":"<p>Save, and you're done! If the app will not boot, refer to Troubleshooting or head on over to the Discord.</p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#troubleshooting","title":"Troubleshooting","text":""},{"location":"System-Setup/TrueNAS-Setup-Guide/#general","title":"General","text":"<ul> <li>Ensure you have replaced empty values (UIDs, GIDs, passwords, API keys) with your own</li> <li>Ensure proper permissions are applied within TrueNAS</li> <li>Monitor logs via the app bash terminal during for any errors if the app is encountering issues</li> </ul>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#specific-issues","title":"Specific Issues","text":""},{"location":"System-Setup/TrueNAS-Setup-Guide/#permissions-issues-inside-the-docker-image","title":"Permissions issues inside the docker image","text":"<p>If you are encountering permissions issues with folders internal to the docker image (not your TrueNAS dataset), consider temporarily setting the user to root (user: 0). If you do this, it is recommended you fix local file permissions via shell and return access back to a non-root user.</p> <p>In my particular setup, I had to create a user/group in TrueNAS with uid:gid of 1000:1000 and auxiliary group <code>apps</code> due to hard-coded values in the RomM docker image. This resolved outstanding issues I had with my instance of RomM talking to its Redis instance.</p>"},{"location":"System-Setup/TrueNAS-Setup-Guide/#contributing","title":"Contributing","text":"<p>If you have any suggestions or improvements, please submit a pull request to the RomM docs.</p>"},{"location":"System-Setup/Unraid-Compose-Setup/","title":"With Docker Compose","text":""},{"location":"System-Setup/Unraid-Compose-Setup/#prerequisites","title":"Prerequisites","text":"<p>Before getting started, install the Community Apps plugin for Unraid.</p> <p>Install Docker Compose Addon from the CA (Community Apps Store)</p> <p></p>"},{"location":"System-Setup/Unraid-Compose-Setup/#docker-tab","title":"Docker Tab","text":"<p>You will now see Compose option under the Docker Containers in your Docker Tab in Unraid</p> <p></p>"},{"location":"System-Setup/Unraid-Compose-Setup/#installation","title":"Installation","text":"<p>Click Add New Stack</p> <ul> <li> <p>Name it RomM and click OK</p> </li> <li> <p>Click the Gear Icon, edit stack, then edit the compose file</p> </li> </ul> <p></p> <ul> <li> <p>Add in the example Docker Compose from our example docker-compose.yml</p> </li> <li> <p>Add your environment variables, for example: API keys, MariaDB info, and metadata providers</p> <ul> <li>You can use secrets and fill in information in a separate <code>.env</code> file</li> </ul> </li> </ul> <p></p> <ul> <li> <p>Click the Gear Icon, edit stack, then edit the environment file</p> <ul> <li>Fill in any environment variables if you used secrets, etc.</li> </ul> </li> <li> <p>Make sure to click Save Changes after each edit to the compose and environment files</p> </li> </ul> <p></p> <p>Warning</p> <p>You need to make sure you are following either Folder Structure A or B (Recommend A Type) RomM Folder Structure</p> <p>Warning</p> <p>It's strongly recommended to backup the <code>appdata</code> folder (or mount it in a safe location) before updating, since tearing down the container will wipe the resources (covers, screenshots, etc.)</p>"},{"location":"System-Setup/Unraid-Compose-Setup/#finish","title":"Finish","text":"<ul> <li>Click Compose Up</li> </ul> <p>Grab <code>IP:Port</code> from romm, and open tab in browser in <code>http://IP:Port</code> and it should take you to setup screen</p> <p></p> <p></p>"},{"location":"System-Setup/Unraid-Setup-Guide/","title":"Unraid Setup Guide","text":""},{"location":"System-Setup/Unraid-Setup-Guide/#prerequisites","title":"Prerequisites","text":"<p>Before getting started, install the Community Apps plugin for Unraid.</p>"},{"location":"System-Setup/Unraid-Setup-Guide/#docker-network","title":"Docker network","text":"<p>You'll want to create a custom bridge-type network for both containers to communicate with each other. This will prevent a number of common issues Unraid users tend to come across during setup. This can be done with the following command: <code>docker network create romm</code>, and you can verify it worked with <code>docker network ls</code>.</p> <p></p>"},{"location":"System-Setup/Unraid-Setup-Guide/#mariadb","title":"MariaDB","text":"<p>MariaDB is required to run RomM, so install it from the plugin registry. Only the official and linuxserver versions are supported, but the official version is preferred.</p> <p></p> <p>Now fill in all the environment variables; descriptions of the options and sensible defaults are listed in the example docker-compose.yml file.</p> <p>Warning</p> <p>The network type must be set to <code>Custom: romm</code></p> <p></p>"},{"location":"System-Setup/Unraid-Setup-Guide/#installation","title":"Installation","text":"<p>From the Unraid dashboard, click <code>APPS</code> in the navigation bar. In the search bar, search for <code>romm</code>, and install the app listed as \"OFFICIAL\". This one is maintained by our team and is the most up-to-date.</p> <p></p>"},{"location":"System-Setup/Unraid-Setup-Guide/#configuration","title":"Configuration","text":"<p>Configure the required environment variables, ports and paths as per the example docker-compose.yml file.</p> <p>Warning</p> <p>The network type must also be set to <code>Custom: romm</code></p> <p></p> <p>Apply the changes, then head to the <code>DOCKER</code> tab. You should see both containers in a running state, and can access RomM using the IP:PORT of the container (highlighted below).</p> <p></p> <p>Warning</p> <p>It's strongly recommended to backup the <code>appdata</code> folder (or mount it in a safe location) before updating, since tearing down the container will wipe the resources (covers, screenshots, etc.)</p>"},{"location":"System-Setup/Unraid-Setup-Guide/#video-tutorial","title":"Video tutorial","text":"<p>DemonWarriorTech has published How to Install RomM on Unraid (Beginner Friendly) on installing and running RomM on Unraid for Beginners with an in depth instructions and explanation of the software install and how to use it.</p> <p></p> <p>AlienTech42 has published a great video on installing and running RomM on Unraid. While a bit out of date vis-a-vis install instructions, it's still very useful for general setup and debugging. Check it out!</p> <p></p>"},{"location":"System-Setup/Unraid-Setup-Guide/#unraid-community-support","title":"Unraid community support","text":"<p>You can find a support thread in the unraid forums.</p>"},{"location":"System-Setup/Unraid-Setup-Guide/#shout-outs","title":"Shout-outs","text":"<p>We want to give a special shout-out to @Smurre95 and @sfumat0 for their help documenting this process, and working towards getting RomM listed in CA. \ud83e\udd1d</p>"},{"location":"Tools/Igir-Collection-Manager/","title":"Igir Collection Manager","text":"<p>Igir is a zero-setup ROM collection manager that sorts, filters, extracts or archives, patches, and reports on collections of any size on any OS. It can be used to rename your ROMs to match the RomM database, and to move them into a new directory structure.</p>"},{"location":"Tools/Igir-Collection-Manager/#setup","title":"Setup","text":""},{"location":"Tools/Igir-Collection-Manager/#directory-structure","title":"Directory structure","text":"<p>The directory structure is important for running the bulk ROM renaming script. Before running the bulk ROM renaming script, set up your directories as follows:</p> <pre><code>.\n\u251c\u2500\u2500 dats/ # DAT files from no-intro.org\n\u251c\u2500\u2500 roms/ # Original ROM collection\n\u251c\u2500\u2500 roms-unverified/ # Working copy of ROMs\n\u2514\u2500\u2500 igir-romm-cleanup.sh\n</code></pre>"},{"location":"Tools/Igir-Collection-Manager/#initial-setup-steps","title":"Initial Setup Steps","text":"<ol> <li> <p>Create a working copy of your ROMs:</p> <pre><code>cp -r roms/ roms-unverified/\n</code></pre> <p>This provides a safe working environment and allows for easy script adjustment if needed.</p> </li> <li> <p>Download DAT Files:</p> <ul> <li>For cartridge-based systems:<ul> <li>Visit No-Intro.org Daily Download</li> <li>Download the latest DAT compilation</li> </ul> </li> <li>For optical media (e.g., PlayStation):<ul> <li>Visit redump.org</li> <li>Download platform-specific DAT files</li> </ul> </li> </ul> <p>Extract the DAT files to your <code>dats</code> directory. You can optionally extract a subset of the .dat files into the directory instead.</p> </li> </ol>"},{"location":"Tools/Igir-Collection-Manager/#configuration","title":"Configuration","text":"<p>Create the cleanup script <code>igir-romm-cleanup.sh</code> with the contents below:</p> <pre><code>#!/usr/bin/env bash\nset -ou pipefail\ncd \"$(dirname \"${0}\")\"\n\nINPUT_DIR=roms-unverified\nOUTPUT_DIR=roms-verified\n\n# Documentation: https://igir.io/\n# Uses dat files: https://datomatic.no-intro.org/index.php?page=download&amp;op=daily\ntime npx -y igir@latest \\\n  move \\\n  extract \\\n  report \\\n  test \\\n  -d dats/ \\\n  -i \"${INPUT_DIR}/\" \\\n  -o \"${OUTPUT_DIR}/{romm}/\" \\\n  --input-checksum-quick false \\\n  --input-checksum-min CRC32 \\\n  --input-checksum-max SHA256 \\\n  --only-retail\n</code></pre> <p>Make the script executable:</p> <pre><code>chmod a+x igir-romm-cleanup.sh\n</code></pre>"},{"location":"Tools/Igir-Collection-Manager/#usage","title":"Usage","text":""},{"location":"Tools/Igir-Collection-Manager/#run-the-script","title":"Run the script","text":"<p>Run the script. It will generate a new output directory named <code>roms-verified</code>, moving the files from <code>roms-unverified</code> if its checksum matches any of the known checksums in the DAT files provided. Any ROMs not identified will remain in the <code>roms-unverified</code> directory.</p>"},{"location":"Tools/Igir-Collection-Manager/#manually-move-over-remaining-files","title":"Manually move over remaining files","text":"<p>The script may not identify all of the ROMs in your input directory. You can choose to migrate them over manually:</p> <pre><code>npx -y igir@latest \\\n  move \\\n  -i roms-unverified/ \\\n  -o roms-verified/ \\\n  --dir-mirror\n</code></pre> <p>This will move your ROMs from the input to the output directory, preserving the subdirectory structure. It also cleans up file extensions in the process.</p>"},{"location":"Tools/Igir-Collection-Manager/#reorganize-multi-disc-games","title":"Reorganize multi-disc games","text":"<p>The Igir script will move games that have multiple discs to separate folders. This can confuse RomM's game detection, and those games need to be reorganized into single folders with many discs.</p> <p>To do this enter your platform directory, such as <code>ps</code> or <code>psx</code> and run the following:</p> <pre><code>ls -d *Disc* | while read dir; do\n  game=$(echo \"${dir}\" | sed -r 's/ \\(Disc [0-9]+\\)//')\n  mkdir -p \"${game}\"\n  mv \"${dir}\"/* \"${game}/\"\n  rm -rf \"${dir}\"\ndone\n</code></pre> <p>This will find any directory with <code>(Disc</code> in the name and move the files into a new directory without the <code>(Disc #)</code> string. For example:</p> <p>Before:</p> <pre><code>Final Fantasy VII (Disc 1) (USA)\nFinal Fantasy VII (Disc 2) (USA)\n</code></pre> <p>Gets combined to:</p> <pre><code>Final Fantasy VII (USA)\n</code></pre>"},{"location":"Troubleshooting/Authentication-Issues/","title":"Troubleshooting Authentication","text":""},{"location":"Troubleshooting/Authentication-Issues/#error-403-forbidden","title":"Error: <code>403 Forbidden</code>","text":"<p>When authentication is enabled, most endpoints will return a <code>403 Forbidden</code> response if you're not authenticated, or if your sessions is in a broken state. The session key can be reset by clearing your cookies.</p> <p>CSRF protection is also enabled, which helps to mitigates CSRF attacks (useful if your instance is public). If you encounter a <code>Forbidden (403) CSRF verification failed</code> error, simply reloading your browser should force it to fetch a fresh CSRF cookie.</p>"},{"location":"Troubleshooting/Authentication-Issues/#error-unable-to-login-csrf-token-verification-failed","title":"Error: <code>Unable to login: CSRF token verification failed</code>","text":"<p>This error is known to happen on Chrome, but could happen in other browsers; manually clear your cookies (specifically one called <code>csrftoken</code>) and hard reload your browser window (CMD+SHIFT+R on macOS, CTRL+F5 on Windows).</p>"},{"location":"Troubleshooting/Authentication-Issues/#error-400-bad-request-on-the-websocket-endpoint","title":"Error: <code>400 Bad Request</code> on the Websocket endpoint","text":"<p>If you're running RomM behind a reverse-proxy (Caddy, Nginx, etc.), ensure that Websockets are supported and enabled. This may vary depending on the reverse proxy solution being used. In the case of Nginx Proxy Manager, enable the \"Websockets Support\" toggle when editing the proxy host.</p>"},{"location":"Troubleshooting/Kubernetes-Issues/","title":"Kubernetes Troubleshooting","text":""},{"location":"Troubleshooting/Kubernetes-Issues/#error-invalid-host-in-tcpinternal-ip8080-of-the-listen-directive-in-etcnginxconfddefaultconf7","title":"Error: <code>invalid host in \"tcp://&lt;internal ip&gt;:8080\" of the \"listen\" directive in /etc/nginx/conf.d/default.conf:7</code>","text":"<p>By default, Kubernetes will grab information about the service object linked to a pod and inject it as an environment variable into the pod. In RomM, this leads to the pod attempting to bind to the service IP address, leading to the above fatal error.</p> <p>To resolve thes error, this default Kubernetes behaviour needs to be disabled by setting the <code>enableServiceLinks</code> value in the pod spec to <code>false</code>.</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: romm\n  namespace: romm\n  ...\nspec:\n  ...\n  template:\n    ...\n    spec:\n      enableServiceLinks: false\n      ...\n</code></pre>"},{"location":"Troubleshooting/Miscellaneous-Troubleshooting/","title":"Miscellaneous Troubleshooting","text":""},{"location":"Troubleshooting/Miscellaneous-Troubleshooting/#restarting-the-container-when-using-sqlite-drops-all-the-datarequires-a-full-re-scan","title":"Restarting the container when using SQLite drops all the data/requires a full re-scan","text":"<p>Verify that the database is mapped to a persistent storage volume in your docker compose or Unraid template.</p> <pre><code>\"/path/to/database:/romm/database\" # [Optional] Only needed if ROMM_DB_DRIVER=sqlite or not set\n</code></pre>"},{"location":"Troubleshooting/Miscellaneous-Troubleshooting/#error-could-not-get-twitch-auth-token-check-client_id-and-client_secret","title":"Error: <code>Could not get twitch auth token: check client_id and client_secret</code>","text":"<p>This is likely due to mis-configured environment variables; verify that <code>CLIENT_ID</code> and <code>CLIENT_SECRET</code> are set correctly, and that both match the values in IGDB.</p>"},{"location":"Troubleshooting/Miscellaneous-Troubleshooting/#how-to-view-romm-logs-to-assist-with-troubleshooting","title":"How to view RomM logs to assist with troubleshooting","text":"<p>Each platform may have different logs, but check the stdout logs for docker. For example when using the recommended docker compose setup <code>docker logs -f romm</code> will display a continuous stream of the log. Most lines start with <code>INFO</code>, <code>WARNING</code>, or <code>ERROR</code></p>"},{"location":"Troubleshooting/Scanning-Issues/","title":"Troubleshooting Scanning","text":""},{"location":"Troubleshooting/Scanning-Issues/#scan-is-skipping-all-platformsends-instantly","title":"Scan is skipping all platforms/ends instantly","text":"<p>There are a few common reasons why a scan may end instantly/without scanning platforms</p> <ul> <li>Badly mounted library: verify that you mounted your ROMs folder at <code>/romm/library</code></li> <li>Incorrect permissions: the app needs to read the files and folders in your library, check their permissions with <code>ls -lh</code></li> <li>Invalid folder structure: verify that your folder structure matches the one in the README</li> </ul>"},{"location":"Troubleshooting/Scanning-Issues/#roms-not-found-for-platform-x-check-romm-folder-structure","title":"ROMs not found for platform X, check <code>romm</code> folder structure","text":"<p>This is the same issue as the one above, and can be quickly solved by verifying your folder structure. RomM expects a library with a folder named <code>roms</code> in it, for example:</p> <ul> <li><code>/server/media/library:/romm/library</code></li> <li><code>/server/media/games/roms:/romm/library/roms</code></li> </ul>"},{"location":"Troubleshooting/Scanning-Issues/#scan-does-not-recognize-a-platform","title":"Scan does not recognize a platform","text":"<p>When scanning the folders mounted in <code>/library/roms</code>, the scanner tries to match the folder name with the platform's slug in IGDB. If you notice that the scanner isn't detecting a platform, verify that the folder name matches the slug in the URL of the platform in IGDB. For example, the Nintendo 64DD has the URL https://www.igdb.com/platforms/64dd, so the folder should be named <code>64dd</code>.</p>"},{"location":"Troubleshooting/Scanning-Issues/#scan-times-out-after-4-hours","title":"Scan times out after ~4 hours","text":"<p>The background scan task times out after 4 hours, which can happen if you have a very large library. The easiest work around is to keep running scans every 4 hours, without checking the \"Complete re-scan\" option. You can also change the timeout via environment variable <code>SCAN_TIMEOUT</code>.</p>"},{"location":"Troubleshooting/Scanning-Issues/#scan-stops-before-finishing-a-platform","title":"Scan stops before finishing a platform","text":"<p>Check the logs for RomM, you should find a line that looks like <code>ERROR:    [RomM][scan_handler][2025-04-12 11:48:55]</code> that explains why the scanner stopped. This can often happen due to a corrupted file or a file the python zipfile library cannot handle, such as old DOS zip files with backslashes instead of forward slashes.</p>"},{"location":"Troubleshooting/Scanning-Issues/#when-scanning-a-very-large-library-with-many-platforms-it-is-difficult-to-keep-track-of-which-systems-have-scanned-in","title":"When scanning a very large library with many platforms it is difficult to keep track of which systems have scanned in","text":"<p>The easiest method is to check the logs via this command, which will list all the scanned platforms since the RomM container was started <code>docker logs romm 2&gt;/dev/null|egrep 'scan_handler.*Identified as.*\ud83c\udfae'</code></p> <p>Here is an example output:</p> <pre><code>$ docker logs romm 2&gt;/dev/null|egrep 'scan_handler.*Identified as.*\ud83c\udfae'\nINFO:     [RomM][scan_handler][2025-04-12 11:37:40]   Identified as PlayStation \ud83c\udfae\nINFO:     [RomM][scan_handler][2025-04-12 14:39:32]   Identified as DOS \ud83c\udfae\nINFO:     [RomM][scan_handler][2025-04-13 12:50:42]   Identified as WonderSwan \ud83c\udfae\n</code></pre>"},{"location":"Troubleshooting/Synology-Issues/","title":"Troubleshooting Synology","text":""},{"location":"Troubleshooting/Synology-Issues/#errno-13-access-denied","title":"ErrNo 13: Access Denied","text":"<p>We have noticed recently a spate of access denied on Synology systems via Portainer or even docker manager. The ErrNo13 is directly related to Synology and it is a simple permission issue. To fix it please do the following:</p> <ol> <li>Make sure SSH is enabled on your Synology product. Refer to here if it is not Enable SSH</li> <li>Connect to SSH and login as your admin username and password (Same login used to login to DSM web page)</li> <li>Take a note on your user:group you can find this by typing ID when logged into SSH.</li> <li>Type the following commands in the SSH window.</li> </ol> <p><code>sudo chown -R user:group /path/to/library</code></p> <p><code>sudo chmod -R a=,a+rX,u+w,g+w /path/to/library</code></p> <p><code>sudo chown -R user:group /path/to/assets</code></p> <p><code>sudo chmod -R a=,a+rX,u+w,g+w /path/to/assets</code></p> <p><code>sudo chown -R user:group /path/to/config</code></p> <p><code>sudo chmod -R a=,a+rX,u+w,g+w /path/to/config</code></p> <p>You will find the relevant directories in your compose, this is basically the folders where you store your RomM information and we are just resetting permissions. Restart the containers and you should now have no issues scanning information in!</p> <p>Any issues please ask in the Discord.</p> <p>Thanks to Docker IDs - DrFrankenstein for the guidance from his blog.</p>"},{"location":"Usage/Administration/","title":"Administration","text":"<p>Clicking on your Profile icon from any screen opens the Administration Drawer. This drawer will look slightly differently based on what role you possess. The options here can include Profile, User Interface, Library Management, Administration, Server Stats, and About.</p>"},{"location":"Usage/Administration/#profile","title":"Profile","text":"<p>All users are able to see this screen. From here you change your username, password, and email.</p> <p>Additionally, you can submit your Retroachievements username and sychronize your achievements here.</p>"},{"location":"Usage/Administration/#user-interface","title":"User Interface","text":"<p>From here you can change your language, the color scheme of RomM, what ribbons are visible to you on the home screen, how to group your platforms, and what information to display on game cards. Finally, you can configure your autogenerated collections here, and the source for those collections.</p>"},{"location":"Usage/Administration/#library-management","title":"Library Management","text":"<p>From this screen, you can edit your platform bindings and versions on the config tab, and manage your missing games on the Missing Games tab.</p>"},{"location":"Usage/Administration/#administration","title":"Administration","text":"<p>From this page you can manage your users, and check your scheduled and manual tasks.</p>"},{"location":"Usage/Administration/#server-stats","title":"Server Stats","text":"<p>This area shows the number of platforms, games, saves, states, and screenshots on the server as well as how much space this consumes. Platforms can be filtered here to show how much they contribute to size and game count.</p>"},{"location":"Usage/Administration/#about","title":"About","text":"<p>This pop-up shows your RomM version, with links to the community discord, github, and documentation.</p>"},{"location":"Usage/LibraryManagement/","title":"Library Management","text":""},{"location":"Usage/LibraryManagement/#the-library-view","title":"The Library View","text":"<p>The default library view shows a few ribbons: Recently Added, Continue Playing, Platforms, and Collections. Games and Platforms are presented as cards that can be interacted with.</p> <p>The menu bar is constantly visible and includes tools to Search, List Platforms, Manage Collections, Scan, go into Console Mode, and Upload content as well as access your administration panel.</p> <p>In all views, a grid icon is present in the upper right of the screen or container. This can be toggled to collapse or expand the container.</p>"},{"location":"Usage/LibraryManagement/#game-and-platform-cards","title":"Game and Platform cards","text":"<p>Platform cards can be clicked to go directly to the platform. A game card can be interacted in a few ways: putting your mouse over it allows you to download the game, play the game if the system is supported, or open a context menu giving you the option to manually match game information using a metadata agent, edit existing data, refresh the metadata, and add or remove the game from favourites or collections.</p> <p> </p> <p>Clicking a platform will take you to the platform view, while clicking a game will take you to the game view.</p>"},{"location":"Usage/LibraryManagement/#filters","title":"Filters","text":"<p>Filters are present on nearly every screen in RomM, allowing you to quickly drill down to see only the information relevant to your search.</p> <p>If you perform a search first, the listed filters will be taken from the metadata of all present games. For example, if you searched for the word \"Fox\", and then clicked filters and selected a Language, the list of languages that can be selected from are taken from the displayed games.</p>"},{"location":"Usage/LibraryManagement/#toggles","title":"Toggles","text":"<p>The filters that can be toggled include:</p> <ul> <li>Show Unmatched - Show only games that have not yet been matched at all.</li> <li>Show Matched - Show only games that have been matched.</li> <li>Show Favourites - Show only games that are Favourites.</li> <li>Show Duplicates - Show only games that have multiple copies.</li> <li>Show Playables - Show only games that can be played in a browser.</li> <li>Show Missing - Shows only games that exist in the database but are otherwise not present.</li> <li>Show Verified - Shows only games that have matched to Hashelous.</li> <li>Show Retroachievements - Shows only games that have support on the RetroAchievements website.</li> </ul> <p>Next there is a platform drop down. This allows you to select a platform you want to restrict your view to showing.</p> <p>After this you can filter by metadata: Game Genre, Franchise, Collections, Company, Age Rating, Region, and Language. One additional filter exists after these: Status. This allows you to use the \"personal\" data tab on any game to track your progress of the game (never playing, backlogged, complete, etc).</p>"},{"location":"Usage/LibraryManagement/#the-menu-bar","title":"The Menu bar","text":"<p>The menu bar is designed for quick access to the tools of your RomM server.</p>"},{"location":"Usage/LibraryManagement/#search","title":"Search","text":"<p>Simply typing text into the search bar will bring up game cards for each game that matches the query. To the left of the search bar are two icons: the view filters and the new collection button.</p> <p></p>"},{"location":"Usage/LibraryManagement/#list-platforms","title":"List Platforms","text":"<p>The Platforms button opens a drawer listing all of the known platforms in RomM. Clicking on any of these will create a search that is limited to that platform.</p>"},{"location":"Usage/LibraryManagement/#collections","title":"Collections","text":"<p>The Collections button opens a drawer listing all of your manually created collections which is specific to each user, as well as your autogenerated collections created by RomM. Clicking a collection will take you to the collection view.</p>"},{"location":"Usage/LibraryManagement/#scan","title":"Scan","text":"<p>This is where you'll scan for new platforms and games. Metadata sources are specified to determine where your metadata is coming from. Platforms allow you to restrict your scan operation to specific platforms.</p> <p>The Scan Operations drop down allows you to choose a specific operation to perform:</p> <ul> <li>New Platforms - This will only look for platforms that aren't already in RomM.</li> <li>Quick Scan - Searches all existing platforms for games that aren't already in RomM.</li> <li>Unidentified Games - Selects all games in RomM that aren't yet matched and attempts to match them.</li> <li>Partial Metadata - Selects games that have been matched, but whose metadata is incomplete, attempting to add more metadata.</li> <li>Recalculate Hashes - Recalculates hashes for all files.</li> <li>Total Rescan - Rescans the all platforms (unless specific platforms are specified) and scans every file presented in the platform folder.</li> </ul>"},{"location":"Usage/LibraryManagement/#console","title":"Console","text":"<p>This button will take you to a new full screen UI that's especially good for navigation with a controller.</p>"},{"location":"Usage/LibraryManagement/#upload","title":"Upload","text":"<p>This button allows you to upload games directly to RomM from the user interface. Simply select a platform and then either click to browse to a ROM or drag and drop it onto the interface.</p>"},{"location":"Usage/LibraryManagement/#recently-added","title":"Recently Added","text":"<p>After a scan is performed, the most recently added games can be found on this ribbon.</p>"},{"location":"Usage/LibraryManagement/#continue-playing","title":"Continue Playing","text":"<p>After a game has been played for any amount of time, it's added to this row. The context menu gains a new option for games located on this ribbon: remove from playing. This helps prevent the ribbon from being cluttered by games you wanted to test but do not plan on playing long term.</p>"},{"location":"Usage/LibraryManagement/#platforms","title":"Platforms","text":"<p>The list of platforms presented here will be matched by RomM by directory structure. See Supported Platforms page for more information about naming your directories.</p>"},{"location":"Usage/LibraryManagement/#favourites-and-collections","title":"Favourites and Collections","text":"<p>This ribbon contains all the games you've marked as favourites, and any collections you've created or that have been generated by RomM.</p>"},{"location":"Usage/LibraryManagement/#platform-view","title":"Platform View","text":"<p>The platform view shows all of the games for a specific platform. There is a button to show the platform drawer, the platform firmware, as well as the usual filter button.</p>"},{"location":"Usage/LibraryManagement/#platform-drawer","title":"Platform Drawer","text":"<p>The platform view drawer has a large icon representing the platform, along with its title.</p> <p>Below that is a button to upload roms and a button to initiate scans.</p> <p>Below that is a line showing how many metadata providers are being used for that platform.</p> <p>Next comes all the metadata for the platform itself: the name, folder name, category, generation, and so on.</p> <p>Following that are the platform settings, which consists of the style of cover used in the game cards for that platform.</p> <p>Finally, in the Danger Zone, is a Delete Platform button. This removes the platform from the database, it does NOT touch the files on your system. If you delete a platform in this way, scanning for new platforms will restore it, and all games will have to have their metadata re-matched.</p> <p></p>"},{"location":"Usage/LibraryManagement/#firmware","title":"Firmware","text":"<p>Next to the platform drawer button is the firmware button. This allows you to review all of the firmware for that system, and upload firmware using the user interface.</p> <p>Uploading firmware will open a file browse dialog box. Simply select the bios file or files you wish to upload and click \"Upload\".</p>"},{"location":"Usage/LibraryManagement/#collection-view","title":"Collection View","text":"<p>The Collection View is similar to the Platform View. It has a Platform drawer next to the filters, much like how the Platform View has the Platform Drawer, but lacks the Firmware button.</p> <p>The Collection metadata will be shown, which includes a game count, who owns the collection, the privacy of the collection, and the ability to delete the collection.</p>"},{"location":"Usage/LibraryManagement/#game-view","title":"Game View","text":"<p>The game view is broken down into two distinct parts.</p> <p>The first container is the poster, with the usual download, play (if the system allows for playing in a web browser) and context menu as well as a new button: copy download link.</p> <p>The second container is the game tabs: Details, Game Data, and Personal tabs. These are containers for information about the game, how RomM sees the save data, and your personal notes. Additional tabs may be visible here depending on your configuration, including the Game Manual, data from How Long to Beat, screenshots, as well as related games.</p> <p>The Details tab includes metadata for the game. This will show where the data comes from, the platform and year of release, as well as the file information like regions and collections. This is the information that is used for filtering.</p> <p>The Game Data tab includes save files and save states, the ability to upload and download them, as well as delete them. This data is personal to the logged in user.</p> <p>Finally the personal tab has check boxes denoting if a game is backlogged, being played, or if it should be hidden. User data such as rating, difficulty, % completed, and the status of the game can also be set here. Retroachievements can be viewed from this tab.</p>"},{"location":"Usage/UserManagement/","title":"User Management","text":"<p>In the Administration panel are the tools used to manage users on the server. The first user created will always be given the admin Role.</p> <p>A user will be able to manage their own game saves, save states, their profile icon, and the \"Personal\" data tab on games.</p>"},{"location":"Usage/UserManagement/#adding-users","title":"Adding Users","text":"<p>Adding a User is as simple as adding a username, password, email address, and selecting a role. Users can be added manually using the \"Add\" button or inviting a user by link. If you invite a user in this manner, all you need to set is a role and they will be prompted to fill in the rest.</p>"},{"location":"Usage/UserManagement/#roles-explained","title":"Roles Explained","text":"<p>Admin - The highest authority role. This grants full permission to do everything on the server.</p> <p>Editor - This role has the ability to edit platforms and games (adding, removing, or scanning for new content) and make collections public.</p> <p>Viewer - The lowest authority role. You can play games, and interact with Personal data tab.</p>"},{"location":"Usage/UserManagement/#removing-users","title":"Removing Users","text":"<p>Removing a user is as simple as clicking the red garbage icon, and confirming the operation.</p>"}]}